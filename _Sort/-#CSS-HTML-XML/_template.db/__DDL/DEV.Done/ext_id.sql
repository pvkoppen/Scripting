USE AC_WEB
GO
-- -----------------------------------------------------------------------
-- --- PREPAIR DATA EXT_PERS_EDU
-- -----------------------------------------------------------------------
UPDATE EXT_PERS_EDU SET VOLLENAAM = UPPER(VOLLENAAM), ACHTERNAAM = UPPER(ACHTERNAAM), VOORVOEGSEL = UPPER(VOORVOEGSEL), VOORNAAM = UPPER(VOORNAAM), VOORLETTERS = UPPER(VOORLETTERS)
UPDATE EXT_PERS_EDU SET SEXE = 'M' WHERE AANHEF = 'DE HEER'
UPDATE EXT_PERS_EDU SET SEXE = 'F' WHERE AANHEF = 'MEVROUW'
UPDATE EXT_PERS_EDU SET SEXE = '0' WHERE SEXE   = '' OR SEXE IS NULL
-- -----------------------------------------------------------------------
UPDATE EXT_PERS_EDU SET NAAMPARTNER = '', VOORVOEGPARTNER = ''
UPDATE EXT_PERS_EDU SET NAAMPARTNER = SUBSTRING(LTRIM(SUBSTRING(VOLLENAAM, LEN(VOORLETTERS)+1, LEN(VOLLENAAM))), 1, CHARINDEX('-',LTRIM(SUBSTRING(VOLLENAAM, LEN(VOORLETTERS)+1, LEN(VOLLENAAM))))-1)
WHERE CHARINDEX('-',LTRIM(SUBSTRING(VOLLENAAM, LEN(VOORLETTERS)+1, LEN(VOLLENAAM)))) <> 0
UPDATE EXT_PERS_EDU SET VOORVOEGPARTNER = SUBSTRING(NAAMPARTNER, 1, LEN(_T.TUSSENVOEG)+1),
  NAAMPARTNER = LTRIM(SUBSTRING(NAAMPARTNER, LEN(_T.TUSSENVOEG)+1, LEN(NAAMPARTNER)))
FROM EXT_PERS_EDU EPE, _TUSSENVOEG _T
WHERE CHARINDEX(_T.TUSSENVOEG+' ', EPE.NAAMPARTNER) = 1
AND LEN(_T.TUSSENVOEG) = (SELECT MAX(LEN(_T1.TUSSENVOEG)) FROM EXT_PERS_EDU EPE1, _TUSSENVOEG _T1
	WHERE CHARINDEX(_T1.TUSSENVOEG+' ', EPE1.NAAMPARTNER) = 1
	AND EPE.STAMNR = EPE1.STAMNR)
--UPDATE EXT_PERS_EDU SET VOORLETTERS     = VOORLETTERS     WHERE VOORLETTERS     <> '' AND VOORLETTERS     IS NOT NULL
--UPDATE EXT_PERS_EDU SET VOORVOEGSEL     = VOORVOEGSEL     WHERE VOORVOEGSEL     <> '' AND VOORVOEGSEL     IS NOT NULL
--UPDATE EXT_PERS_EDU SET VOORVOEGPARTNER = VOORVOEGPARTNER WHERE VOORVOEGPARTNER <> '' AND VOORVOEGPARTNER IS NOT NULL
UPDATE EXT_PERS_EDU SET VOORNAAM        = UPPER(SUBSTRING(VOORNAAM   , 1, 1))+LOWER(SUBSTRING(VOORNAAM   , 2, LEN(VOORNAAM   ))) WHERE VOORNAAM        <> '' AND VOORNAAM        IS NOT NULL
UPDATE EXT_PERS_EDU SET ACHTERNAAM      = UPPER(SUBSTRING(ACHTERNAAM , 1, 1))+LOWER(SUBSTRING(ACHTERNAAM , 2, LEN(ACHTERNAAM ))) WHERE ACHTERNAAM      <> '' AND ACHTERNAAM      IS NOT NULL
UPDATE EXT_PERS_EDU SET NAAMPARTNER     = UPPER(SUBSTRING(NAAMPARTNER, 1, 1))+LOWER(SUBSTRING(NAAMPARTNER, 2, LEN(NAAMPARTNER))) WHERE NAAMPARTNER     <> '' AND NAAMPARTNER     IS NOT NULL
-- -----------------------------------------------------------------------
-- --- PREPAIR PERSONEEL
-- -----------------------------------------------------------------------
UPDATE PERSONEEL SET VOORLETTERS = '' WHERE VOORLETTERS IS NULL
UPDATE PERSONEEL SET VOORLETTERS = SUBSTRING(VOORNAAM,1,1) WHERE VOORLETTERS = '' AND VOORNAAM <> '' AND VOORNAAM IS NOT NULL
-- -----------------------------------------------------------------------
-- --- CLEAR EXT_PERSONEEL
-- -----------------------------------------------------------------------
SELECT 'DELETE'
DELETE FROM EXT_PERSONEEL
GO
-- -----------------------------------------------------------------------
-- --- INVOER OUDE ID'S
-- -----------------------------------------------------------------------
SELECT 'INSERT OUDE RECORD'
INSERT INTO EXT_PERSONEEL (EXT_PERS_ID, ACTIEDATUM, STATUS)
SELECT DISTINCT A.EXT_PERS_ID, '2002-01-01', 'A'
FROM PERSONEEL A 
WHERE A.EXT_PERS_ID IS NOT NULL AND A.EXT_PERS_ID <> ''
AND A.EXT_PERS_ID NOT IN (SELECT EXT_PERS_ID FROM EXT_PERSONEEL)
GO
-- -----------------------------------------------------------------------
-- --- INVOER NIEUWE ID'S
-- -----------------------------------------------------------------------
SELECT 'INSERT NIEUWE RECORD'
INSERT INTO EXT_PERSONEEL (EXT_PERS_ID, ACTIEDATUM, STATUS)
SELECT DISTINCT A.STAMNR, SUBSTRING(CONVERT(CHAR,GETDATE()),1,11), 'A'
FROM EXT_PERS_EDU A 
WHERE A.STAMNR IS NOT NULL AND A.STAMNR <> ''
AND A.STAMNR NOT IN (SELECT EXT_PERS_ID FROM EXT_PERSONEEL)
GO
-- -----------------------------------------------------------------------
-- --- AFRONDEN VERLOPEN ID'S
-- -----------------------------------------------------------------------
SELECT 'INSERT AFRONDING OUDE RECORDS'
INSERT INTO EXT_PERSONEEL (EXT_PERS_ID, ACTIEDATUM, STATUS)
SELECT DISTINCT A.EXT_PERS_ID, SUBSTRING(CONVERT(CHAR,GETDATE()),1,11), 'I'
FROM EXT_PERSONEEL A 
WHERE A.EXT_PERS_ID IS NOT NULL AND A.EXT_PERS_ID <> ''
AND A.EXT_PERS_ID NOT IN (SELECT STAMNR FROM EXT_PERS_EDU)
GO
-- -----------------------------------------------------------------------
-- --- INVOER DUBBELE RECORDS UPDATE ID'S
-- -----------------------------------------------------------------------
SELECT 'INSERT UPDATES OUDE RECORD'
INSERT INTO EXT_PERSONEEL (EXT_PERS_ID, ACTIEDATUM, STATUS)
SELECT DISTINCT A.STAMNR, SUBSTRING(CONVERT(CHAR,GETDATE()),1,11), 'A'
FROM EXT_PERS_EDU A 
WHERE A.STAMNR IS NOT NULL AND A.STAMNR <> ''
AND A.STAMNR NOT IN (SELECT EXT_PERS_ID FROM EXT_PERSONEEL 
	WHERE ACTIEDATUM = SUBSTRING(CONVERT(CHAR,GETDATE()),1,11))
GO
-- -----------------------------------------------------------------------
-- --- UPDATE RECORDS MET OUDE GEGEVENS
-- -----------------------------------------------------------------------
SELECT 'UPDATE OUDE RECORD'
UPDATE EXT_PERSONEEL
SET VOORLETTERS   =  B.VOORLETTERS,
	VOORNAAM      =  B.VOORNAAM,
	TUSSENVOEG    =  B.TUSSENV,
	ACHTERNAAM    =  B.ACHTERNAAM,
	VOLLEDIGENAAM =  RTRIM(LTRIM(B.TUSSENV+' '+B.ACHTERNAAM)),
	FUNCTIE       =  C.NAAM,
	SORTKENMERK   =  '',
	SEXE          =  SEXEID,
	PRIVETELNR    =  '',
	BIRTHDATE	  =  NULL 
FROM EXT_PERSONEEL A JOIN PERSONEEL B 
	ON (A.EXT_PERS_ID = B.EXT_PERS_ID) LEFT OUTER JOIN FUNCTIES C 
	ON (B.FUNCTIE_ID = C.FUNCTIE_ID)
WHERE ACTIEDATUM = '2002-01-01' OR STATUS = 'I'
GO
-- -----------------------------------------------------------------------
-- --- UPDATE LAATSTE RECORDS MET NIEUWE GEGEVENS
-- -----------------------------------------------------------------------
SELECT 'UPDATE NIEUWE RECORD'
UPDATE EXT_PERSONEEL
SET VOORLETTERS   =  B.VOORLETTERS,
	VOORNAAM      =  B.VOORNAAM,
	TUSSENVOEG    =  _T.VERTAAL,
	ACHTERNAAM    =  B.ACHTERNAAM,
	VOLLEDIGENAAM =  CASE 
		WHEN B.NAAMPARTNER <> '' THEN LTRIM(_TP.VERTAAL+' ')+B.NAAMPARTNER+'-'+LTRIM(_T.VERTAAL+' '+B.ACHTERNAAM)
		ELSE LTRIM(_T.VERTAAL+' ')+B.ACHTERNAAM END, --B.VOLLENAAM,
	FUNCTIE       =  B.FUNCTIE,
	SORTKENMERK   =  B.SORTKENMERK,
	SEXE          =  B.SEXE,
	PRIVETELNR    =  B.PRIVETELNR,
	BIRTHDATE	  =  B.GEBDATUM 
FROM EXT_PERSONEEL A JOIN EXT_PERS_EDU B LEFT OUTER JOIN _TUSSENVOEG _T ON(_T.TUSSENVOEG = B.VOORVOEGSEL) LEFT OUTER JOIN _TUSSENVOEG _TP ON(_TP.TUSSENVOEG = B.VOORVOEGPARTNER)
	ON (A.EXT_PERS_ID = B.STAMNR)
WHERE ACTIEDATUM <> '2002-01-01' AND STATUS <> 'I'
GO
-- -----------------------------------------------------------------------
-- --- SHOW NEW DATA
-- -----------------------------------------------------------------------
SELECT TOP 2 'PERSONEEL   ', * FROM PERSONEEL
SELECT TOP 2 'EXT_PERS_EDU', * FROM EXT_PERS_EDU
SELECT * FROM EXT_PERSONEEL ORDER BY 1,2
GO
/*
-- -----------------------------------------------------------------------
-- --- VERWIJDER OUDE VOORLETTERS BIJ VOLLEDIGE NAAM.
-- -----------------------------------------------------------------------
BEGIN TRAN
SELECT TOP 10 VOLLEDIGENAAM  FROM EXT_PERSONEEL
UPDATE EXT_PERSONEEL
SET VOLLEDIGENAAM = RTRIM(LTRIM(SUBSTRING(VOLLEDIGENAAM, LEN(VOORLETTERS)+1, LEN(VOLLEDIGENAAM))))
SELECT TOP 10 VOLLEDIGENAAM  FROM EXT_PERSONEEL
ROLLBACK
COMMIT
*/
SELECT * FROM LOKATIES

DROP VIEW _qEXPORT
go
CREATE VIEW _qEXPORT AS
SELECT P.PERS_ID, 
	S.AANHEF, 
	EP.SEXE, 
	EP.VOORLETTERS AS VOORLETTER, 
	EP.VOORNAAM AS ROEPNAAM, 
	'' AS VOORVOEG, 
	EP.VOLLEDIGENAAM AS ACHTERNAAM, 
	SK.UNIT AS AFDELING, 
	EP.FUNCTIE, 
	SK.LOCATIE AS [OBJECT], 
	PL.TELEFOONNR AS TELNR, 
	P.PERS_ID+'@alfa-college.nl' AS EMAIL, 
	EP.EXT_PERS_ID AS EDUKAATNR
FROM (_SORTKENMERK SK INNER JOIN 
	(_SEXE S INNER JOIN 
		(PERSONEEL P INNER JOIN EXT_PERSONEEL EP
		ON P.EXT_PERS_ID = EP.EXT_PERS_ID) 
	ON S.SEXE = EP.SEXE) 
ON SK.SORTKENMERK = EP.SORTKENMERK) LEFT OUTER JOIN PERS_LOK PL
ON (PL.PERS_ID = P.PERS_ID AND PL.LOKATIE_ID = SUBSTRING(SK.LOCATIE,1,4) )
go 
SELECT * FROM _qEXPORT



