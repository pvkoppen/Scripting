<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0030)http://www.w3.org/TR/css3-box/ -->
<HTML lang=en><HEAD><TITLE>CSS3 module: The box model</TITLE>
<META content="text/html; charset=iso-8859-1" http-equiv=Content-Type><LINK 
href="CSS3 module The box model_bestanden/default.css" rel=stylesheet 
title=Default type=text/css><LINK 
href="CSS3 module The box model_bestanden/W3C-WD.css" rel=stylesheet 
title=Default type=text/css>
<META content="MSHTML 5.00.3502.5390" name=GENERATOR></HEAD>
<BODY>
<DIV class=head>
<P><A class=logo href="http://www.w3.org/" rel=home><IMG alt=W3C height=48 
src="CSS3 module The box model_bestanden/w3c_home" width=72></A> 
<H1 id=css3-module>CSS3 module: The box model</H1>
<H2 class="no-num no-toc" id=w3c-working>W3C Working Draft 24 October 2002</H2>
<DL>
  <DT>This version: 
  <DD><A href="http://www.w3.org/TR/2002/WD-css3-box-20021024" 
  lang=und>http://www.w3.org/TR/2002/WD-css3-box-20021024</A> 
  <DT>Latest version: 
  <DD><A href="http://www.w3.org/TR/css3-box" 
  lang=und>http://www.w3.org/TR/css3-box</A> 
  <DT>Previous version: 
  <DD><A href="http://www.w3.org/TR/2001/WD-css3-box-20010726" 
  lang=und>http://www.w3.org/TR/2001/WD-css3-box-20010726</A> 
  <DT>Editors: 
  <DD>Bert Bos (W3C), <A href="mailto:bert@w3.org" 
  lang=und>mailto:bert@w3.org</A> </DD></DL><!--begin-include "../copyright.inc"-->
<P class=copyright><A 
href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#Copyright">Copyright</A> 
© 2002 <A href="http://www.w3.org/"><ABBR 
title="World&#10;Wide Web Consortium">W3C</ABBR></A><SUP>®</SUP> (<A 
href="http://www.lcs.mit.edu/"><ABBR 
title="Massachusetts Institute of&#10;Technology">MIT</ABBR></A>, <A 
href="http://www.inria.fr/"><ABBR lang=fr 
title="Institut National de Recherche en Informatique et&#10;Automatique">INRIA</ABBR></A>, 
<A href="http://www.keio.ac.jp/">Keio</A>), All Rights Reserved. W3C <A 
href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#Legal_Disclaimer">liability</A>, 
<A 
href="http://www.w3.org/Consortium/Legal/ipr-notice-20000612#W3C_Trademarks">trademark</A>, 
<A 
href="http://www.w3.org/Consortium/Legal/copyright-documents-19990405">document 
use</A> and <A 
href="http://www.w3.org/Consortium/Legal/copyright-software-19980720">software 
licensing</A> rules apply. <!--end-include-->
<HR title="Separator for header">
</DIV>
<H2 class="no-num no-toc" id=Abstract>Abstract</H2>
<P>CSS (Cascading Style Sheets) describe the rendering of documents on various 
media. When <EM>textual</EM> documents (e.g., HTML, WML) are laid out on 
<EM>visual</EM> media (e.g., screen, paper), CSS represents the elements of the 
document by rectangular boxes that are laid out one after the other or nested 
inside each other in an ordering that is called a <EM>flow.</EM> This module 
describes the characteristics of the flow and of the various kinds of boxes. 
<P>The flow includes <SPAN title="floating box"><A 
href="http://www.w3.org/TR/css3-box/#floating0">"floating"</A></SPAN> boxes, but 
tables <A href="http://www.w3.org/TR/css3-box/#CSS3TBL" 
rel=biblioentry>[CSS3TBL]</A> and "absolute" and "fixed" positioning <A 
href="http://www.w3.org/TR/css3-box/#CSS3POS" rel=biblioentry>[CSS3POS]</A> are 
described in other modules. Also, the rules for partitioning a flow into pages 
(for paged media) is described elsewhere <A 
href="http://www.w3.org/TR/css3-box/#CSS3PAGE" rel=biblioentry>[CSS3PAGE]</A>, 
as are the special boxes for ruby annotations <A 
href="http://www.w3.org/TR/css3-box/#CSS3RUBY" rel=biblioentry>[CSS3RUBY]</A> 
and the multicolumn layouts <A href="http://www.w3.org/TR/css3-box/#CSS3COL" 
rel=biblioentry>[CSS3COL]</A>. 
<P>The box model builds on the inline text modules (<A 
href="http://www.w3.org/TR/css3-box/#CSS3TEXT" rel=biblioentry>[CSS3TEXT]</A> 
and <A href="http://www.w3.org/TR/css3-box/#CSS3LINE" 
rel=biblioentry>[CSS3LINE]</A>), that describe how text is laid out on a line, 
including treatment of superscripts, bidirectional ("bidi") and vertical text. 
<P>The flow can be horizontal (typical for most languages), but in level 3 of 
CSS, flows can also be vertical (typical for the Uighur script and often used 
for ideographic scripts). 
<H2 class="no-num no-toc" id=Status>Status of this document</H2>
<P>This is a draft of a module of CSS level 3. It should eventually become a 
CSS3 Recommendation, most likely as a chapter in a larger set of modules. 
<P>All the properties and features described here that also exist in CSS level 2 
are intended to be backwards compatible, except in very rare cases that are 
explicitly marked. There is a small number of new properties, mostly to deal 
with vertical writing, and some properties from CSS2 have become shorthand 
properties for more detailed new ones in CSS3. 
<P>This draft should not be cited except as "work in progress." It is a work 
item of the CSS working group which is part of the <A 
href="http://www.w3.org/Style/">Style activity</A> (see <A 
href="http://www.w3.org/Style/Activity">summary</A>). It may be modified or 
dropped altogether at any point in time. Implementations for the purpose of 
experimenting with the specification are welcomed, as long as they are clearly 
marked as experimental. 
<P>Feedback on this draft is invited. The preferred place for discussion of this 
draft is the public, <A 
href="http://lists.w3.org/Archives/Public/www-style/">archived</A> mailing list 
<A href="http://www.w3.org/Mail/Lists.html#www-style" 
lang=und>www-style@w3.org</A> (see <A 
href="http://www.w3.org/Mail/Request">instructions</A>). 
<P>Patent disclosures relevant to CSS may be found on the Working Group's public 
<A href="http://www.w3.org/Style/CSS/Disclosures">patent disclosure page.</A> 
<P>To find the latest version of this working draft, please follow the "Latest 
version" link above, or visit the list of W3C <A 
href="http://www.w3.org/TR/">Technical Reports</A>. 
<H2 class="no-num no-toc" id=Table>Table of contents</H2><!--begin-toc-->
<UL class=toc>
  <LI><A href="http://www.w3.org/TR/css3-box/#dependencies"><SPAN class=secno>1. 
  </SPAN>Dependencies on other modules</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#notations"><SPAN class=secno>2. 
  </SPAN>Notations used in this specification</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#introduction"><SPAN class=secno>3. 
  </SPAN>Introduction</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#L706"><SPAN class=secno>4. 
  </SPAN>The 'display', 'display-model' and 'display-role' properties</A> 
  <UL class=toc>
    <LI><A href="http://www.w3.org/TR/css3-box/#mixing"><SPAN class=secno>4.1. 
    </SPAN>Mixing flow layout with other layouts</A> </LI></UL>
  <LI><A href="http://www.w3.org/TR/css3-box/#the-padding"><SPAN class=secno>5. 
  </SPAN>The 'padding' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-border-width"><SPAN 
  class=secno>6. </SPAN>The 'border-width' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-margin"><SPAN class=secno>7. 
  </SPAN>The 'margin' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-width"><SPAN class=secno>8. 
  </SPAN>The 'width' and 'height' properties</A> 
  <UL class=toc>
    <LI><A href="http://www.w3.org/TR/css3-box/#the-ltlengthgt"><SPAN 
    class=secno>8.1. </SPAN>The &lt;length&gt; and &lt;percentage&gt; values</A> 

    <LI><A href="http://www.w3.org/TR/css3-box/#the-ltnumbergt"><SPAN 
    class=secno>8.2. </SPAN>The &lt;number&gt; value</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#auto"><SPAN class=secno>8.3. 
    </SPAN>The 'auto' value</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#constraints"><SPAN 
    class=secno>8.4. </SPAN>Constraints on width, height and margins in 
    block-level elements</A> </LI></UL>
  <LI><A href="http://www.w3.org/TR/css3-box/#the-box-width"><SPAN 
  class=secno>9. </SPAN>The 'box-width' and 'box-height' properties (or 
  'box-sizing'?)</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-min-width"><SPAN 
  class=secno>10. </SPAN>The 'min-width', 'max-width', 'min-height' and 
  'max-height' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-fit"><SPAN class=secno>11. 
  </SPAN>The 'fit' and 'fit-position' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-crop"><SPAN class=secno>12. 
  </SPAN>The 'crop' property</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#floating"><SPAN class=secno>13. 
  </SPAN>Floating boxes</A> 
  <UL class=toc>
    <LI><A href="http://www.w3.org/TR/css3-box/#the-float"><SPAN 
    class=secno>13.1. </SPAN>The 'float' property</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#the-clear"><SPAN 
    class=secno>13.2. </SPAN>The clear property</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#the-clear-after"><SPAN 
    class=secno>13.3. </SPAN>The clear-after property</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#the-float-displace"><SPAN 
    class=secno>13.4. </SPAN>The 'float-displace' property</A> </LI></UL>
  <LI><A href="http://www.w3.org/TR/css3-box/#the-indent-edge-reset"><SPAN 
  class=secno>14. </SPAN>The 'indent-edge-reset' property</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#collapsing"><SPAN class=secno>15. 
  </SPAN>Collapsing margins</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#overflow"><SPAN class=secno>16. 
  </SPAN>The 'overflow' property</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-overflow-x"><SPAN 
  class=secno>17. </SPAN>The 'overflow-x' and 'overflow-y' properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#marquee"><SPAN class=secno>18. 
  </SPAN>The marquee properties</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-overflow-clip"><SPAN 
  class=secno>19. </SPAN>The overflow-clip property</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#the-visibility"><SPAN 
  class=secno>20. </SPAN>The visibility property</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#glossary"><SPAN class=secno>21. 
  </SPAN>Glossary</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#profiles"><SPAN class=secno>22. 
  </SPAN>Profiles</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#conformance"><SPAN class=secno>23. 
  </SPAN>Conformance</A> 
  <LI><A 
  href="http://www.w3.org/TR/css3-box/#acknowledgments">Acknowledgments</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#references">References</A> 
  <UL class=toc>
    <LI><A href="http://www.w3.org/TR/css3-box/#normative">Normative 
    references</A> 
    <LI><A href="http://www.w3.org/TR/css3-box/#other">Other references</A> 
  </LI></UL>
  <LI><A href="http://www.w3.org/TR/css3-box/#index">Index</A> 
  <LI><A href="http://www.w3.org/TR/css3-box/#property">Property index</A> 
</LI></UL><!--end-toc-->
<HR>

<H2 id=dependencies><SPAN class=secno>1. </SPAN>Dependencies on other 
modules</H2>
<P>This CSS3 module depends on the following other CSS3 modules: 
<UL>
  <LI><CITE>CSS3 module: text</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3TEXT" rel=biblioentry>[CSS3TEXT]</A> 
  &#8212; the creation of inline boxes 
  <LI class=issue>Math [?] 
  <LI><CITE>CSS3 module: line box model</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3LINE" rel=biblioentry>[CSS3LINE]</A> 
  &#8212; the construction and dimensions of line boxes, that are made out of 
  inline-level boxes 
  <LI><CITE>CSS3 module: syntax</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3SYN" rel=biblioentry>[CSS3SYN]</A> 
  <LI><CITE>CSS3 module: values &amp; units</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3VAL" rel=biblioentry>[CSS3VAL]</A> 
  <LI class=issue>[others?] </LI></UL>
<P>It has non-normative (informative) references to the following other CSS3 
modules: 
<UL>
  <LI>CSS3 module: tables - how the box model is modified inside tables. 
  <LI>CSS3 module: positioning - how the box model is modified for absolutely 
  positioned elements. 
  <LI>CSS3 module: ruby - how the box model is modified for ruby annotations. 
  <LI>Generated text and lists 
  <LI><CITE>Selectors</CITE> <A href="http://www.w3.org/TR/css3-box/#SELECT" 
  rel=biblioentry>[SELECT]</A> 
  <LI><CITE>CSS3 module: border</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3BORDER" 
  rel=biblioentry>[CSS3BORDER]</A> &#8212; <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#border-width">'border-width'</A></SPAN> 
  property 
  <LI><CITE>CSS3 module: color</CITE> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3COLOR" 
  rel=biblioentry>[CSS3COLOR]</A> &#8212; color and opacity 
  <LI class=issue>[others?] </LI></UL>
<H2 id=notations><SPAN class=secno>2. </SPAN>Notations used in this 
specification</H2>
<P>Each property is introduced by a table summarizing its usage. See <SPAN 
class=issue>[where? Introduction?]</SPAN> for an explanation. The values <SPAN 
class=css>'inherit'</SPAN> and <SPAN class=css>'initial'</SPAN> are valid on all 
properties, but are omitted from the tables for brevity's sake. They are 
explained in <SPAN class=issue>[where? Cascading module?]</SPAN> 
<P class=note>Note that non-normative notes generally start with the word "note" 
and are rendered like this paragraph. 
<DIV class=example>
<P>Examples look like this. </P></DIV>
<H2 id=introduction><SPAN class=secno>3. </SPAN>Introduction</H2>
<P class=issue>[To do: provide some examples with XHTML and "generic XML."] 
<P>The formatting model of CSS for visual media is based on a "flow" of 
rectangular boxes, that are either juxtaposed or nested, according to certain 
rules. There are several kinds of boxes (block boxes, inline boxes, table boxes, 
<SPAN title="floating box"><A 
href="http://www.w3.org/TR/css3-box/#floating0">floating boxes</A></SPAN>,...). 
Properties such as <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin1">'margin'</A></SPAN> and <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> 
can modify the position of a box relative to other boxes to a certain extent. 
<P>Typically, an element in the source document corresponds to a box on the 
display, but sometimes an element has more than one box (e.g., a list item and 
its bullet, or a box that is broken over two lines), and sometimes there is no 
box at all (if the rendering has been suppressed with the property <SPAN 
class=css>'display: none'</SPAN>). Conversely, every box either belongs to a 
single element in the source, or it is an "anonymous" box that belongs to no 
element but is created by the rules in the style sheet (but then it indirectly 
belongs to the element that its parent box belongs to). This relation is 
important for interactive presentations, including WYSIWYG editors, because 
every event on a box, such as a mouse click, can unambiguously be linked to a 
specific element in the document source. 
<DIV class=figure>
<P><IMG alt="Schematic representation of rel" 
src="CSS3 module The box model_bestanden/box-intro.png"> </P>
<P class=caption>Relation between 4 displayed boxes in the rendered document (on 
the right) and the 3 corresponding elements in the source document on the 
(left). </P></DIV>
<P>CSS level 3 supports three <DFN id=orientations 
title=orientation>orientations</DFN> of flows. In this module we will refer to 
them as <EM><A 
href="http://www.w3.org/TR/css3-box/#horizontal0">horizontal</A></EM>, <EM><A 
href="http://www.w3.org/TR/css3-box/#vertical-rl">vertical-rl</A></EM> and <SPAN 
lang=und><A 
href="http://www.w3.org/TR/css3-box/#vertical-lr"><EM>vertical-lr</EM></A></SPAN>. 
Horizontal flow has horizontal text and the flow grows downwards. This is the 
typical flow for most languages, e.g., English, Greek or Arabic. Vertical-rl 
flow has vertical text and the flow grows to the left. This orientation is often 
used in Japanese and Chinese. <SPAN lang=und><A 
href="http://www.w3.org/TR/css3-box/#vertical-lr">Vertical-lr</A></SPAN> flow 
also has vertical text, but the flow grows to the right (<SPAN 
lang=und>"lr"</SPAN> = "left to right"). This is the typical orientation for the 
Uighur script, one of the scripts used for Mongolian. Horizontal flow that grows 
upwards is not supported, and neither are diagonal flows nor complex shapes 
(spirals, zigzag,...). Such texts can usually be achieved with a combination of 
SVG <A href="http://www.w3.org/TR/css3-box/#SVG10" rel=biblioentry>[SVG10]</A> 
and CSS. The orientation of a flow is set (indirectly) with the <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
shorthand property. 
<P>Boxes have a <DFN id=content title="content area">content</DFN> with a 
certain width and height (which can often be set explicitly with the <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> 
and <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> properties). 
Around that can be an optional area called the <DFN id=padding 
title="padding&#10;area">padding</DFN> (the thickness of which is controlled 
with the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#padding1">'padding'</A></SPAN> property; 
'0' means no padding). Around the padding can be a <DFN id=border 
title="border&#10;area">border</DFN> (controlled by the <SPAN 
class=property>'border'</SPAN> property). Finally, boxes also have a <DFN 
id=margin title="margin&#10;area">margin</DFN> around the border (specified with 
the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin1">'margin'</A></SPAN> property). The 
outside edges of these areas are called <DFN id=content0>content edge</DFN>, 
<DFN id=padding0>padding edge</DFN>, <DFN id=border0>border edge</DFN> and <DFN 
id=margin0>margin edge</DFN> respectively. When we talk about the width/height 
of a box, we mean the width/height of the content area, unless otherwise 
specified. 
<DIV class=figure>
<P><IMG 
alt="Diagram of a typical box, showing the content, padding, border&#10;and margin areas" 
src="CSS3 module The box model_bestanden/box.png"> </P>
<P class=caption>The various areas and edges of a typical box </P></DIV>
<P>Apart from the areas and edges defined above, the text uses a number of other 
technical terms in the definitions of properties. Those terms are always linked 
to the <A href="http://www.w3.org/TR/css3-box/#glossary">glossary</A> at the end 
of this document. 
<H2 id=L706><SPAN class=secno>4. </SPAN>The 'display', 'display-model' and 
'display-role' properties</H2><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name->
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=display-model>display-model</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>inline-inside | block-inside | table | ruby 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>text 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<TABLE class=propdef id=name-0>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=display-role>display-role</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>none | block | inline | list-item | run-in | compact | table-row | 
      table-cell | table-row-group | table-header-group | table-footer-group | 
      table-column | table-column-group | table-caption | ruby-text | ruby-base 
      | ruby-base-group | ruby-text-group 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>inline 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<TABLE class=propdef id=name-1>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=display>display</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>inline | block | inline-block | list-item | run-in | compact | | table 
      | inline-table | table-row-group | table-header-group | table-footer-group 
      | table-row | table-column-group | table-column | table-cell | 
      table-caption | ruby | ruby-base | ruby-text | ruby-base-group | 
      ruby-text-group | none 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>inline 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual (<SPAN class=css>'none'</SPAN> applies to all) 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>see individual properties </TR></TBODY></TABLE>
<P>The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
property determines the algorithm with which an element lays out its children, 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
specifies what role an element has in its parent's algorithm, and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> is a 
shorthand for the most common combinations of the two. 
<P>The equivalence between <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN>, <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
and <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> is 
as follows: 
<TABLE class=equiv-table>
  <TBODY>
  <TR>
    <TD>
    <TH>inline-inside 
    <TH>block-inside 
    <TH>table 
    <TH>ruby 
    <TD>
    <TD>
  <TR>
    <TH>none** 
    <TD>none 
    <TD>none 
    <TD>none 
    <TD>none 
    <TD>
    <TD>
  <TR>
    <TH>inline 
    <TD>inline 
    <TD>inline-block 
    <TD>inline-table 
    <TD>ruby 
    <TD>
    <TD>
  <TR>
    <TH>block 
    <TD>*** 
    <TD>block 
    <TD>table 
    <TD class=issue>?? 
    <TD>
    <TD>
  <TR>
    <TH>list-item 
    <TD>*** 
    <TD>list-item 
    <TD>* 
    <TD class=issue>?? 
    <TD>
    <TD>
  <TR>
    <TH>run-in 
    <TD>run-in 
    <TD>* 
    <TD>* 
    <TD>* 
    <TD>
    <TD>
  <TR>
    <TH>compact 
    <TD>compact 
    <TD>* 
    <TD>* 
    <TD>* 
    <TD>
    <TD>
  <TR>
    <TH>table-cell 
    <TD>*** 
    <TD>table-cell 
    <TD>* 
    <TD class=issue>?? 
    <TD>
    <TD>
  <TR>
    <TH>table-caption 
    <TD>*** 
    <TD>table-caption 
    <TD>* 
    <TD class=issue>?? 
    <TD>
    <TD>
  <TR>
    <TH>table-row-group** 
    <TD colSpan=6>table-row-group 
  <TR>
    <TH>table-header-group** 
    <TD colSpan=6>table-header-group 
  <TR>
    <TH>table-footer-group** 
    <TD colSpan=6>table-footer-group 
  <TR>
    <TH>table-column** 
    <TD colSpan=6>table-column 
  <TR>
    <TH>table-column-group** 
    <TD colSpan=6>table-column-group 
  <TR>
    <TH>table-row** 
    <TD colSpan=6>table-row 
  <TR>
    <TH>ruby-base** 
    <TD colSpan=6>ruby-base 
  <TR>
    <TH>ruby-text** 
    <TD colSpan=6>ruby-text 
  <TR>
    <TH>ruby-base-group** 
    <TD colSpan=6>ruby-base-group 
  <TR>
    <TH>ruby-text-group** 
    <TD colSpan=6>ruby-text-group </TR>
  <TBODY>
  <TR>
    <TD colSpan=6>
      <P class=footnote>*) this combination can be made only by setting 
      'display-role' and 'display-model'; there is no shorthand for 'display' 
      <P class=footnote>**) 'display-model' is ignored for this value of 
      'display-role' 
      <P class=footnote>***) this combination cannot be made with 'display', but 
      note that the effect is the same as with 'display-model' set to 
      'block-inside', which <EM>can</EM> be made with 'display' </P>
    <TD></TR></TBODY></TABLE>
<P>The values of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
have the following meaning. (For ease of reading, we describe only horizontal 
flow.) 
<DL>
  <DT>table 
  <DD>See the Tables module <A href="http://www.w3.org/TR/css3-box/#CSS3TBL" 
  rel=biblioentry>[CSS3TBL]</A>. 
  <DT>ruby 
  <DD>See the Ruby module <A href="http://www.w3.org/TR/css3-box/#CSS3RUBY" 
  rel=biblioentry>[CSS3RUBY]</A>. 
  <DT>inline-inside 
  <DD>If this is not an <EM><A 
  href="http://www.w3.org/TR/css3-box/#inline-level0">inline-level 
  element</A></EM>, the effect is the same as for 'block-inside'. Otherwise the 
  element's inline-level children and text sequences that come before the first 
  <SPAN title="block-level element"><A 
  href="http://www.w3.org/TR/css3-box/#block-level0">block-level</A></SPAN> 
  child are rendered as additional inline boxes for the line boxes of the <EM><A 
  href="http://www.w3.org/TR/css3-box/#containing">containing block</A></EM>. 
  Ditto for the text sequences and inline-level children after the last 
  block-level child. The other children and text sequences are rendered as for 
  'block-inside'. 
  <DT>block-inside 
  <DD>Child elements are rendered as described for their 'display-role'. 
  Sequences of <SPAN title="inline-level element"><A 
  href="http://www.w3.org/TR/css3-box/#inline-level0">inline-level 
  elements</A></SPAN> and <SPAN title="anonymous inline element"><A 
  href="http://www.w3.org/TR/css3-box/#anonymous">anonymous inline 
  elements</A></SPAN> (ignoring elements with a display-role of 'none') are 
  rendered as one or more <SPAN title="line box"><A 
  href="http://www.w3.org/TR/css3-box/#line-box">line boxes</A></SPAN>. (How 
  many line boxes depends on the line-breaking rules, see the Text module 
  [[!CSS3-text].) </DD></DL>
<DIV class=example>
<P>Note that an element with <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
of <SPAN class=css>'block-inside'</SPAN> may contain <EM>anonymous inline 
elements</EM>. For example, the texts "Your" and "or your" are anonymous inline 
elements of this paragraph: <PRE>&lt;p&gt;
Your &lt;em&gt;money&lt;/em&gt; or your &lt;em&gt;life!&lt;/em&gt;
&lt;/p&gt;</PRE></DIV>
<DIV class=example>
<P>The difference between <SPAN class=css>'inline-inside'</SPAN> and <SPAN 
class=css>'block-inside'</SPAN> is subtle. It is best illustrated with the 
difference between inline elements and inline-block elements. Assume the 
following document: <PRE>&lt;p&gt;The two words &lt;span&gt;two words&lt;/span&gt; appear twice in this para.&lt;/p&gt;</PRE>
<P>Further assume the following style sheet: <PRE>p    { display-model: block-inside }
span { display-role: inline; display-model: inline-inside }</PRE>
<P>The second line is equivalent to (and would usually be written as) <SPAN 
class=css>'span {display: inline}'</SPAN>. The rendering might look like this: 
<DIV class=figure>
<P><IMG alt="Element rendered inline" 
src="CSS3 module The box model_bestanden/inline.png"> </P>
<P class=caption>The 'display-model' of the span is 'inline-inside' and the 
contents thus appear as part of the line. </P></DIV>
<P>If the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
of the span is changed to <SPAN class=css>'block-inside'</SPAN> (i.e., 
equivalent to <SPAN class=css>'span {display: inline-block}'</SPAN>), and we 
further set the 'width' to an appropriate value, e.g.: <PRE>p    { display-model: block-inside }
span { display-role: inline; display-model: block-inside;
       width: 2.5em}</PRE>
<P>then the rendering will become like this: 
<DIV class=figure>
<P><IMG alt="Element rendered as inline block" 
src="CSS3 module The box model_bestanden/inline-block.png"> </P>
<P class=caption>The 'display-model' of the span is 'block-inside' and the 
contents thus appear as a block. </P></DIV></DIV>
<P>The values of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
have the following meaning. (Where we talk about "next element," we ignore any 
intervening elements with 'display-role: none'.) The descriptions assume 
horizontal flow for easier reading, but vertical flow is analogous. 
<DL>
  <DT>none 
  <DD>The element is not rendered. The rendering is the same as if the element 
  had been removed from the document tree, except for possible effects on 
  counters (see [generated] or [paged]). 
  <P class=note>Note that :before and :after pseudo elements of this element are 
  also not rendered, see [generated].) </P>
  <DT>run-in 
  <DD>The effect depends on what comes after the element. If the next element 
  (in the depth-first, left to right tree traversal, so not necessarily a 
  sibling) has a 'display-model' of 'block-inside', the current element will be 
  rendered as if it had display-role 'inline' and was the first child of that 
  block element. Otherwise this element will be rendered as if it had 
  display-role 'block'. <SPAN class=issue>[Does this explain <A 
  href="http://www.bath.ac.uk/~py8ieh/internet/eviltests/display-runin.html">Ian's 
  tests</A>?]</SPAN> 
  <DT>compact 
  <DD>The effect depends on the <EM><A 
  href="http://www.w3.org/TR/css3-box/#intrinsic">intrinsic size</A></EM> of 
  this element and on what comes after it. If the next element has a 
  'display-role' of 'block', and the intrinsic width of the compact element is 
  less than or equal to the left margin of that block (resp. the right margin, 
  if the block's 'direction' is 'rtl'), then the compact element is rendered in 
  the left (right) margin of the block at its intrinsic size and baseline 
  aligned with the first line box of the block. <SPAN class=issue>[Do we need a 
  different alignment depending on script?]</SPAN> In all other cases the 
  compact element is rendered as if its display-role was 'block'. 
  <DT>list-item 
  <DD>The element is rendered the same as if it had display-role 'block', but in 
  addition a marker is generated (see <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#list-style">'list-style'</A></SPAN>). 
  <DT>block 
  <DD>The element is rendered as a rectangular block. See <EM><A 
  href="http://www.w3.org/TR/css3-box/#collapse">Collapsing margins</A></EM> for 
  its position relative to earlier boxes in the same flow. In paged media [ref] 
  or inside another element that has two or more columns, the box may be split 
  into several smaller boxes. 
  <DT>inline 
  <DD>The element is rendered inside a line box. It may be split into several 
  boxes because of line breaking and bidi processing (see the Text module). 
  <DT>table-... 
  <DD>See the Tables module <A href="http://www.w3.org/TR/css3-box/#CSS3TBL" 
  rel=biblioentry>[CSS3TBL]</A>. </DD></DL>
<P id=computed>The computed value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> is 
influenced by the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> property (and, in 
case the Positioning module <A href="http://www.w3.org/TR/css3-box/#CSS3POS" 
rel=biblioentry>[CSS3POS]</A> is in use, also by <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN>): 
<UL>
  <LI>If the computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> is 
  <SPAN>'none'</SPAN>, the computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  is the same as the specified value. 
  <LI>Otherwise, the computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  is <SPAN class=css>'block'</SPAN>, unless the specified value is <SPAN 
  class=css>'none'</SPAN> or <SPAN class=css>'list-item'</SPAN>, in which case 
  it is the same as the specified value. </LI></UL>
<P class=issue>[The idea here is that a list item can float and still keep its 
bullet. Is this useful? Or should list items turn into normal blocks when they 
float?] 
<P>(As usual, the above holds after processing <SPAN class=css>'inherit'</SPAN> 
and <SPAN class=css>'initial'</SPAN>.) 
<P>[Add an elaborate illustration showing line boxes, block elements, margins 
between them, a marker, etc.] 
<DIV class=example>
<P>Here is an HTML example with various types of boxes: <PRE>&lt;style type="text/css"&gt;
  h3 { display: run-in; margin: 1em 0 }
  h3:after { content: ". " }
  p { display: block; margin: 1em 0 }
  img { display: block; margin: 2em }
  span { display: inline-block; padding: 0.6em;
    font-size: 70%; vertical-align: middle }
&lt;/style&gt;
&lt;h3&gt;First heading&lt;/h3&gt;
&lt;h3&gt;Second heading&lt;/h3&gt;
&lt;p&gt;This paragraph has an image that is displayed as a block:
  &lt;img src="w3c_home" ALT="W3C"&gt;
  and also an inline-block:
  &lt;span&gt;
    This element&lt;br&gt;
    has two lines
  &lt;/span&gt;</PRE>
<P>A possible rendering is as follows: 
<DIV class=figure>
<P><IMG alt="Possible rendering" 
src="CSS3 module The box model_bestanden/display-example.png"> </P>
<P class=caption>Possible rendering of the example HTML document </P></DIV>
<DIV class=figure>
<P><IMG alt="Possible rendering with explanations" 
src="CSS3 module The box model_bestanden/display-ex.png"> </P>
<P class=caption>Rendering with explanations </P></DIV>
<P>The first <SPAN class=html>h3</SPAN> was not rendered inline, because it was 
not followed by a block. The top and bottom margin that was set on <SPAN 
class=html>h3</SPAN> only apply when the element is rendered as a block. 
</P></DIV>
<H3 id=mixing><SPAN class=secno>4.1. </SPAN>Mixing flow layout with other 
layouts</H3>
<P>In document formats that combine different layout models (e.g., a document 
type that combines SVG with HTML in a single document), it may be necessary to 
introduce additional values for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN>, 
for the layout models that are not defined by CSS3. It is up to the 
specification of such formats to define appropriate keywords. 
<P class=issue>[Do we recommend a naming scheme?] 
<H2 id=the-padding><SPAN class=secno>5. </SPAN>The 'padding' properties</H2><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name-2>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=padding1>padding</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>[ <VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> ]{1,4} 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>(see individual properties) 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width* of containing block 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>see individual properties 
  <TR>
    <TD class=footnote colSpan=2>*) if the containing block is 'horizontal', 
      otherwise the height </TR></TBODY></TABLE>
<TABLE class=propdef id=name-3>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=padding-top>padding-top</DFN> , <DFN 
      id=padding-right>padding-right</DFN>, <DFN 
      id=padding-bottom>padding-bottom</DFN>, <DFN 
      id=padding-left>padding-left</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>[ <VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> ] 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>0 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width* of containing block 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; 
  <TR>
    <TD class=footnote colSpan=2>*) if the containing block is 'horizontal', 
      otherwise the height </TR></TBODY></TABLE>
<P>Sets the thickness of the padding around a box. The value may not be 
negative. The color/pattern of the element's background extends into the 
padding. See the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#background">'background'</A></SPAN> 
property. 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#padding1">'Padding'</A></SPAN> is a 
shorthand that sets the four other properties at the same time. If <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#padding1">'padding'</A></SPAN> has 4 
values, they are for top, right, bottom and left in that order. If left is 
omitted, it is the same as right. If bottom is omitted it is the same as top, if 
right is omitted it is the same as top. 
<P>When the padding is 0, we say that the padding is absent. 
<P class=note>Note that percentages on <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#padding-top">'padding-top'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#padding-bottom">'padding-bottom'</A></SPAN> 
are relative to the <EM><A 
href="http://www.w3.org/TR/css3-box/#width">width</A></EM> of the containing 
block, not the height (at least in a horizontal flow; in a vertical flow they 
are relative to the height). 
<H2 id=the-border-width><SPAN class=secno>6. </SPAN>The 'border-width' 
properties</H2>
<P class=issue>[Move this to the Border module? For the Box model, we just need 
the fact that borders have a certain width, without saying how it is specified.] 
<!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name-4>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=border-top-width>border-top-width</DFN>, <DFN 
      id=border-right-width>border-right-width</DFN>, <DFN 
      id=border-bottom-width>border-bottom-width</DFN>, <DFN 
      id=border-left-width>border-left-width</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | thin | 
      medium | thick 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>medium 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width* of containing block 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value 
  <TR>
    <TD class=footnote colSpan=2>*) if the containing block is 'horizontal', 
      otherwise the height </TR></TBODY></TABLE>
<TABLE class=propdef id=name-5>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=border-width>border-width</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>&lt;border-width&gt;{1,4} 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>(see individual properties) 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>see individual properties </TR></TBODY></TABLE>
<P class=issue>[Border-width doesn't allow percentages in CSS2; should we allow 
percentages (of the containing block's width) in CSS3?] 
<P>These properties set the thickness the <EM title="border area"><A 
href="http://www.w3.org/TR/css3-box/#border">border</A></EM>. For the style, 
color, etc. of the border, as well as for the <SPAN 
class=property>'border'</SPAN> shorthand property, see the <CITE>Border</CITE> 
module <A href="http://www.w3.org/TR/css3-box/#CSS3BORDER" 
rel=biblioentry>[CSS3BORDER]</A>. 
<P>The &lt;border-width&gt; can be '<VAR>&lt;length&gt;</VAR> | thin | medium | 
thick'. The <VAR>&lt;length&gt;</VAR> may not be negative. The lengths 
corresponding to 'thin', 'medium' and 'thick' are not specified, but the values 
are constant throughout a document and thin &lt;= medium &lt;= thick. A UA 
could, e.g., make the thickness depend on the 'medium' font size: one choice 
might be 1, 3 &amp; 5px when the 'medium' font size is 17px or less. 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#border-width">'Border-width'</A></SPAN> is 
a shorthand that sets the four 'border-*-width' properties. If it has four 
values, they set top, right, bottom and left in that order. If left is missing, 
it is the same as right; if bottom is missing, it is the same as top; if right 
is missing, it is the same as top. 
<P class=note>Note that the initial width is 'medium', but the initial style is 
'none' and therefore the computed width is 0. See <A 
href="http://www.w3.org/TR/css3-box/#CSS3BORDER" 
rel=biblioentry>[CSS3BORDER]</A>. 
<P>When the computed width of the border is 0, we say that the border is absent. 

<H2 id=the-margin><SPAN class=secno>7. </SPAN>The 'margin' properties</H2><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name-6>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=margin-top>margin-top</DFN> , <DFN 
      id=margin-right>margin-right</DFN>, <DFN 
      id=margin-bottom>margin-bottom</DFN>, <DFN 
      id=margin-left>margin-left</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>0 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width* of containing block 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; 
  <TR>
    <TD class=footnote colSpan=2>*) if the containing block is 'horizontal', 
      otherwise height </TR></TBODY></TABLE>
<TABLE class=propdef id=name-7>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=margin1>margin</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>[ <VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | auto 
      ]{1,4} 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>(see individual properties) 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width* of containing block 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>see individual properties 
  <TR>
    <TD class=footnote colSpan=2>*) if the containing block is 'horizontal', 
      otherwise height </TR></TBODY></TABLE>
<P>These properties set the thickness of the <EM><A 
href="http://www.w3.org/TR/css3-box/#margin1">margin</A></EM>. The value may be 
negative, but the UA may impose a lower bound. 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin1">'Margin'</A></SPAN> is a shorthand 
to set top, right, bottom and left together. If four values are given, they set 
top, right, bottom and left in that order. If left is omitted, it is the same as 
right. If bottom is omitted, it is the same as top. If right is omitted it is 
the same as top. 
<P>The meaning of <SPAN class=css>'auto'</SPAN> on 'margin-left' '-right', 
'-top' and '-bottom' is as follows: 
<UL>
  <LI>on <A href="http://www.w3.org/TR/css3-box/#floating">floating</A> and 
  <SPAN>inline-level elements</SPAN>, <SPAN class=css>'auto'</SPAN> is equal to 
  0 
  <LI>on <A href="http://www.w3.org/TR/css3-box/#positioned">positioned 
  elements</A>: see the positioning module<SPAN class=issue>[ref]</SPAN> 
  <LI>on <SPAN title="normal flow"><A 
  href="http://www.w3.org/TR/css3-box/#normal">normal-flow elements</A></SPAN>, 
  if the <SPAN><A href="http://www.w3.org/TR/css3-box/#containing">containing 
  block</A></SPAN> is <EM><A 
  href="http://www.w3.org/TR/css3-box/#horizontal0">horizontal</A></EM>: 
  <UL>
    <LI><SPAN class=css>'auto'</SPAN> on <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-top">'margin-top'</A></SPAN> and 
    <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-bottom">'margin-bottom'</A></SPAN> 
    is equal to 0 
    <LI>on <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-right">'margin-right'</A></SPAN> 
    and <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-left">'margin-left'</A></SPAN>: 
    see <A href="http://www.w3.org/TR/css3-box/#eq1">equation (1)</A> below 
  </LI></UL>
  <LI>on <SPAN title="normal flow"><A 
  href="http://www.w3.org/TR/css3-box/#normal">normal-flow elements</A></SPAN>, 
  if the <SPAN><A href="http://www.w3.org/TR/css3-box/#containing">containing 
  block</A></SPAN> is <EM><A 
  href="http://www.w3.org/TR/css3-box/#vertical0">vertical</A></EM> : 
  <UL>
    <LI><SPAN class=css>'auto'</SPAN> on <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-right">'margin-right'</A></SPAN> 
    and <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-left">'margin-left'</A></SPAN> 
    is equal to 0 
    <LI>on <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-top">'margin-top'</A></SPAN> and 
    <SPAN class=property><A 
    href="http://www.w3.org/TR/css3-box/#margin-bottom">'margin-bottom'</A></SPAN>: 
    see <A href="http://www.w3.org/TR/css3-box/#eq1">equation (1)</A> below 
  </LI></UL></LI></UL>
<P>Margins must satisfy certain constraints, which means that the computed value 
may be different from the specified value. See <A 
href="http://www.w3.org/TR/css3-box/#eq1">equation (1)</A> below. 
<P class=note>Note that in a <SPAN>horizontal flow,</SPAN> percentages on <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-top">'margin-top'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-bottom">'margin-bottom'</A></SPAN> 
are relative to the <EM><A 
href="http://www.w3.org/TR/css3-box/#width">width</A></EM> of the containing 
block, not the height (and in vertical flow, <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-left">'margin-left'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-right">'margin-right'</A></SPAN> are 
relative to the height, not the width). 
<P>Note that <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-top">'margin-top'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#margin-bottom">'margin-bottom'</A></SPAN> 
do not apply to non-replaced, inline elements (in horizontal flow); see <A 
href="http://www.w3.org/TR/css3-box/#CSS3LINE" rel=biblioentry>[CSS3LINE]</A>. 
<H2 id=the-width><SPAN class=secno>8. </SPAN>The 'width' and 'height' 
properties</H2>
<TABLE class=propdef id=name-8>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=width>width</DFN>, <DFN id=height>height</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | <VAR 
      class=issue>&lt;number&gt;</VAR> | auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all elements, except <EM>inline-level elements</EM> with <SPAN 
      class=property><A 
      href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
      of <SPAN class=css>'inline-inside'</SPAN> 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>width, resp. height of containing block, but see prose 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; or 'auto' (see text) </TR></TBODY></TABLE>
<P class=issue>[Idea by David Baron: add keyword values 'intrinsic' and 
'min-intrinsic' to force an element to have its intrinsic or minimum width.] 
<P>This property sets the width resp, height of the <EM>content</EM> area. The 
value may not be negative and in addition the UA may impose a certain lower 
bound. 
<P>Width and height are symmetric: the role of width and height are exactly 
interchanged in horizontal and in vertical text. Below we explain only width; 
height can be derived from that by interchanging "horizontal" and "vertical." 
<P>The computed value is normally a <VAR>&lt;length&gt;</VAR>, but in the 
following cases it can also be <SPAN class=css>'auto'</SPAN>: 
<UL>
  <LI>The computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> is <SPAN 
  class=css>'auto'</SPAN>, if the specified values of both <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> and <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#box-height">'box-height'</A></SPAN> are 
  <SPAN class=css>'auto'</SPAN> and the element is in a <EM>horizontal 
  flow.</EM> 
  <LI>The computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> is <SPAN 
  class=css>'auto'</SPAN>, if the specified value of both <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#box-width">'box-width'</A></SPAN> are 
  <SPAN class=css>'auto'</SPAN> and the element is in a <EM><A 
  href="http://www.w3.org/TR/css3-box/#vertical">vertical flow</A></EM>. 
</LI></UL>
<P>In these two cases, a specified value of <SPAN class=css>'auto'</SPAN> cannot 
be replaced by a <VAR>&lt;length&gt;</VAR> on the basis of information that is 
available at the start of the element, i.e., based solely on the width and 
height of preceding elements and ancestors. 
<H3 id=the-ltlengthgt><SPAN class=secno>8.1. </SPAN>The &lt;length&gt; and 
&lt;percentage&gt; values</H3><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<P>A <VAR>&lt;percentage&gt;</VAR> is relative to the computed value of the 
width or height of the <A 
href="http://www.w3.org/TR/css3-box/#containing">containing block</A>, but if 
that value is <SPAN class=css>'auto'</SPAN> the computed value for the 
percentage is also <SPAN class=css>'auto'</SPAN>. 
<P class=note>Note: when <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> or <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> is set to a 
value other than <SPAN class=css>'auto'</SPAN> on a replaced element, the size 
of content area is set to that value and the content may be scaled or otherwise 
deformed to fit the area; see <A href="http://www.w3.org/TR/css3-box/#auto">"the 
'auto' value"</A> below. If both <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> are set, the 
scaling may even be different in the two directions; see the <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#fit">'fit'</A></SPAN> 
property. 
<H3 id=the-ltnumbergt><SPAN class=secno>8.2. </SPAN>The &lt;number&gt; 
value</H3>
<P>A <VAR>&lt;number&gt;</VAR> value sets the width or height to that many times 
the <EM><A href="http://www.w3.org/TR/css3-box/#intrinsic0">intrinsic 
width</A></EM> resp. height of the element. <SPAN class=issue>[It is only 
defined for replaced elements?]</SPAN> The <SPAN class="">computed value</SPAN> 
is the result of that multiplication (a <VAR>&lt;length&gt;</VAR>) <SPAN 
class=issue>[or is it the number? does it matter?]</SPAN>. 
<P class=issue>If a replaced element does not have an intrinsic size, the 
computed value is UA dependent? 
<DIV class=example>
<P>Here are some examples. Compare the following rules to set the size of an 
image, assuming <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> is <SPAN 
class=css>'auto'</SPAN> in each case: <PRE>img {width: 50px}  /* exactly 50px wide */
img {width: 50%}   /* half as wide as the containing block */
img {width: 50em}  /* 50× the current font size */
img {width: auto}  /* the intrinsic size */
img {width: 1}     /* ditto, i.e., the intrinsic size */
img {width: 0.5}   /* half the intrinsic width */</PRE></DIV>
<P class=note>Note that <VAR>&lt;number&gt;</VAR> does not exist in CSS level 2. 

<H3 id=auto><SPAN class=secno>8.3. </SPAN>The 'auto' value</H3>
<P>We describe the meaning of <SPAN class=css>'auto'</SPAN> on elements that 
have <EM><A href="http://www.w3.org/TR/css3-box/#horizontal">horizontal 
flow</A></EM>. Vertical flow is analogous, but with the roles of <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> 
and <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> interchanged. 
<P>For replaced elements there are two cases. (1) Both width and height are 
<SPAN class=css>'auto'</SPAN>: in this case both are set to the <EM><A 
href="http://www.w3.org/TR/css3-box/#intrinsic">intrinsic size</A></EM>. (2) 
Only one of the two is <SPAN class=css>'auto'</SPAN>: in this case <SPAN 
class=css>'auto'</SPAN> is computed as the size that keeps the aspect ratio the 
same, i.e., width : height = intrinsic-width : intrinsic-height. If the 
intrinsic width or height is zero, the element is not scaled and the computed 
value of <SPAN class=css>'auto'</SPAN> is the intrinsic size. <SPAN 
class=issue>If the element does not have an intrinsic size and no aspect ratio 
either, the computed value is UA dependent.</SPAN> 
<P>For non-replaced elements, <SPAN class=css>'auto'</SPAN> on <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> is always the 
<EM><A href="http://www.w3.org/TR/css3-box/#intrinsic1">intrinsic 
height</A></EM> that corresponds to the element's computed width. The computed 
value of <SPAN class=css>'auto'</SPAN> on <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> depends on the 
type of box: 
<OL>
  <LI>If the element is a <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM> other than 
  the <EM><A href="http://www.w3.org/TR/css3-box/#root-element">root 
  element</A></EM>, width is the <EM><A 
  href="http://www.w3.org/TR/css3-box/#intrinsic0">intrinsic width</A></EM>. 
  <LI>If the element is the <EM><A 
  href="http://www.w3.org/TR/css3-box/#root-element">root element</A></EM> on 
  paged media, the value is the computed width value of the <SPAN 
  class=property><A href="http://www.w3.org/TR/css3-box/#size">'size'</A></SPAN> 
  property. 
  <LI>Otherwise, if the element is a <EM><A 
  href="http://www.w3.org/TR/css3-box/#block-level0">block-level 
  element</A></EM> and its <EM><A 
  href="http://www.w3.org/TR/css3-box/#containing">containing block</A></EM> 
  also has a <EM><A href="http://www.w3.org/TR/css3-box/#horizontal">horizontal 
  flow</A></EM>, <A href="http://www.w3.org/TR/css3-box/#eq1">equation (1)</A> 
  below determines the width. 
  <LI>Otherwise, if the element is block-level and the containing block has a 
  different <EM><A 
  href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM>, the 
  computed value is the <EM><A 
  href="http://www.w3.org/TR/css3-box/#intrinsic0">intrinsic width</A></EM>. 
  <LI>Otherwise (i.e., the element is positioned, is a table element or a ruby), 
  see the positioning <A href="http://www.w3.org/TR/css3-box/#CSS3POS" 
  rel=biblioentry>[CSS3POS]</A>, table <A 
  href="http://www.w3.org/TR/css3-box/#CSS3TBL" rel=biblioentry>[CSS3TBL]</A> or 
  ruby <A href="http://www.w3.org/TR/css3-box/#CSS3RUBY" 
  rel=biblioentry>[CSS3RUBY]</A> modules. </LI></OL>
<P class=note>Note that in CSS2, floating elements (case 1) were given a certain 
small, UA-dependent width, but in CSS3 they are given their intrinsic width 
(often referred to as <DFN id=shrink-wrapped>"shrink-wrapped"</DFN>). 
<H3 id=constraints><SPAN class=secno>8.4. </SPAN>Constraints on width, height 
and margins in block-level elements</H3>
<P>For <EM>block-level elements</EM> with <EM><A 
href="http://www.w3.org/TR/css3-box/#horizontal">horizontal flow</A></EM> in a 
<EM><A href="http://www.w3.org/TR/css3-box/#containing">containing 
block</A></EM> also with horizontal flow, the computed values of the 'width' and 
margins must satisfy this constraint: 
<BLOCKQUOTE id=eq1>
  <P class=eqno>(1) 
  <P>(width of containing block) = margin-left + border-left + padding-left + 
  width + padding-right + border-right + margin-right </P></BLOCKQUOTE>
<P>The following cases can occur: 
<OL>
  <LI>None of width, margin-left and margin-right are specified as 'auto' and 
  the values satisfy the constraint. 
  <LI>None of width, margin-left or margin-right was specified as 'auto' and the 
  equation is not satisfied. There are two sub-cases: (1) if the <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  element is <SPAN class=css>'ltr'</SPAN>, the specified value of <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#margin-right">'margin-right'</A></SPAN> 
  is ignored and 'margin-right' is set to the value that makes the equation 
  true; (2) if <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> is 
  <SPAN class=css>'rtl'</SPAN>, it is <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#margin-left">'margin-left'</A></SPAN> 
  that is ignored and computed from the equation. 
  <LI>If exactly one of width, margin-left or margin-right is 'auto', its value 
  is computed from the equation. 
  <LI>If width and one or both margins are 'auto', the margins that are 'auto' 
  are set to 0 and the equation is solved for width. 
  <LI>If both margin-left and margin-right are 'auto', the equation is solved 
  under the extra constraint that margin-left = margin-right. </LI></OL>
<P>If, after solving the equation, width has a value that is smaller than <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#min-width">'min-width'</A></SPAN>, the 
computed value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> is set to the 
computed value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#min-width">'min-width'</A></SPAN> and the 
constraint is evaluated again as if width had been specified with this value. 
<P>If, after solving the equation, width has a value that is larger than both 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#max-width">'max-width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#min-width">'min-width'</A></SPAN>, the 
computed value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> is set to the 
larger of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#max-width">'max-width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#min-width">'min-width'</A></SPAN> and the 
constraint is evaluated again as if <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> had been 
specified with this value. 
<DIV class=example>
<P>Note: case 5 can be used to center block-level elements: <PRE>BLOCKQUOTE {
    width: 30em;
    margin-left: auto;
    margin-right: auto }</PRE>
<P>This is different from 'text-align: center', which centers each line inside 
the block, but not the block inside its parent. </P></DIV>
<P>Block-level elements with a vertical flow inside a containing block with a 
vertical flow are analogous, but with a constraint on height and 
margin-top/margin-bottom: 
<BLOCKQUOTE id=eq2>
  <P class=eqno>(2) 
  <P>(height of containing block) = margin-top + border-top + padding-top + 
  height + padding-bottom + border-bottom + margin-bottom </P></BLOCKQUOTE>
<H2 id=the-box-width><SPAN class=secno>9. </SPAN>The 'box-width' and 
'box-height' properties (or 'box-sizing'?)</H2>
<TABLE class=propdef id=name-9>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=box-width>box-width</DFN>, <DFN id=box-height>box-height</DFN> 

  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>same as 'width' and 'height' 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>see 'width' and 'height' 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; or 'auto' (see text) </TR></TBODY></TABLE>
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#box-width">'Box-width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#box-height">'box-height'</A></SPAN>, if not 
set to <SPAN class=css>'auto'</SPAN>, override <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> respectively. 
They set the width/height from <EM>border-edge</EM> to border-edge. I.e., <SPAN 
class=css>'box-width: X'</SPAN> is equivalent to setting 'width: (X - 
padding-left - border-left - padding-right - border-right)' <PRE class=example>BUTTON { box-width: 10% }</PRE>
<P>The computed value is either the specified <VAR>&lt;length&gt;</VAR>, or the 
result of adding the relevant padding to the computed value of <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> 
or <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN>, except that if 
the computed value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> resp. <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> is <SPAN 
class=css>'auto'</SPAN>, then so is <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#box-width">'box-width'</A></SPAN> resp. 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#box-height">'box-height'</A></SPAN>. 
<DIV class=issue>
<P>The property 'box-sizing' was first proposed to provide an upgrade path for 
certain browsers that interpreted <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> the wrong way. 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#box-width">'Box-width'</A></SPAN> and <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#box-height">'box-height'</A></SPAN> are 
proposed as improved versions of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#box-sizing">'box-sizing'</A></SPAN>. 
However, newer versions of those browsers have already fixed the bug and it is 
not clear that these properties are really needed anymore. In cases where they 
could be useful on their own, it might be both more powerful and easier to use 
if there were a more generic solution, based on the idea of an extra box around 
the element, that can have not just its own width, but also other properties, 
such as borders, position, etc. Such an extra box can result from a 
transformation (XSLT, behaviors or otherwise, even something expressed in CSS 
itself), or from an extension of the box model, where every element has an (or 
as many as needed) implicit parents, addressed by a pseudo-element <SPAN 
class=css>':container'</SPAN> or similar. 
<TABLE class=propdef id=name-10>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=box-sizing>box-sizing</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>content-box | border-box 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>content 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>elements to which 'width' or 'height' applies 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>'content-box' or 'border-box' </TR></TBODY></TABLE>
<P>Description: 
<DL>
  <DT>content-box 
  <DD>This is the behavior of width and height as specified by CSS2. The 
  specified width and height apply to the width and height respectively of the 
  content box of the element. The padding and border of the element are laid out 
  and drawn outside the specified width and height. 
  <DT>border-box 
  <DD>The specified width and height on this element determine the border box of 
  the element. That is, any padding or border specified on the element is laid 
  out and drawn inside this specified width and height. The content width and 
  height is computed by subtracting the border and padding widths of the 
  respective sides from the specified width and height. This is the behavior of 
  width and height as commonly implemented by legacy HTML user agents for 
  replaced elements and input elements. </DD></DL></DIV>
<P class=issue>Yet another possibility: Introducing simple expressions can also 
solve the same problem, but in a different way: <CODE>BUTTON { border: 2px 
solid; width: 10% - 2 * 2px }</CODE> 
<P class=issue>And yet another idea is to create a pseudo-element ':container' 
that represents a second box that every box has around itself: 
<CODE>BUTTON:container {width: 10%}</CODE>. Indeed, the ':container' could have 
borders, padding and margins as well, and maybe even another ':container' around 
itself, but then cascading would suffer. 
<H2 id=the-min-width><SPAN class=secno>10. </SPAN>The 'min-width', 'max-width', 
'min-height' and 'max-height' properties</H2>
<TABLE class=propdef id=name-11>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=max-width>max-width</DFN>, <DFN id=max-height>max-height</DFN> 

  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> | auto | 
      inherit 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>same as 'width' and 'height' 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>see 'width' and 'height' 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; or 'auto' (see text) </TR></TBODY></TABLE>
<P>Set the maximum width and height of an element's <EM>content</EM> area. <SPAN 
class=css>'Auto'</SPAN> means there is no maximum. 
<TABLE class=propdef id=name-12>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=min-width>min-width</DFN>, <DFN id=min-height>min-height</DFN> 

  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;length&gt;</VAR> | <VAR>&lt;percentage&gt;</VAR> 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>0 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>same as 'width' and 'height' 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>see 'width' and 'height' 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; or 'auto' (see text) </TR></TBODY></TABLE>
<P>Set the minimum width and height of an element's <EM>content</EM> area. 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#min-width">'Min-width'</A></SPAN> overrides 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#max-width">'max-width'</A></SPAN>, and both 
override <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN>, in case any of 
them conflict. Analogous for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#min-height">'min-height'</A></SPAN>, <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#max-height">'max-height'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> 
<H2 id=the-fit><SPAN class=secno>11. </SPAN>The 'fit' and 'fit-position' 
properties</H2>
<P class=issue>[This section should move to the "Generated &amp; Replaced 
Content" module.] 
<TABLE class=propdef id=name-13>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=fit>fit</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>fill | none | meet | slice 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>fill 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<TABLE class=propdef id=name-14>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=fit-position>fit-position</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>[ [<VAR>&lt;percentage&gt;</VAR> | <VAR>&lt;length&gt;</VAR> ]{1,2} | 
      [ [top | center | bottom] || [left | center | right] ] ] | auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>0% 0% 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>refer to width and height of box itself 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#fit">'fit'</A></SPAN> property gives a hint 
for how to scale a replaced element if neither its <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> nor its <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> property is 
<SPAN class=css>'auto'</SPAN>. Not all replaced objects can be scaled, but 
images typically can. 
<DL>
  <DT>fill 
  <DD>Scale the object's height and width independently so that the content just 
  touches all edges of the width × height box. 
  <DT>none 
  <DD>Do not scale the object. 
  <DT>meet 
  <DD>Make the object as large as possible with its width &lt;= <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and height 
  &lt;= <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN>, while 
  preserving its aspect ratio. Position the object as for <SPAN 
  class=css>'hidden'</SPAN>. 
  <DT>slice 
  <DD>Make the object as small as possible with its width &gt;= <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and height 
  &gt;= <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN>, while 
  preserving its aspect ratio. Position the object as for <SPAN 
  class=css>'hidden'</SPAN>. See 'overflow' for how to render the parts that 
  stick out of the box. </DD></DL>
<P>See the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> property 
for what happens to parts of the object that stick out of the box. 
<P class=note>The keywords are intended to convey the visual effect in the case 
that <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> is <SPAN 
class=css>'hidden'</SPAN>, which is expected to be the most common case. 
<DIV class=figure>
<P><IMG alt="Illustration of the four values" 
src="CSS3 module The box model_bestanden/fit.png"> </P>
<P class=caption>An example how each of the four values of 'fit' causes the 
object (gray rectangle) to be scaled to fit the given box (red dotted outline). 
</P></DIV>
<P>The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#fit-position">'fit-position'</A></SPAN> 
determines the alignment of the object inside the box. The values have the same 
meaning as the values on <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#background-position">'background-position'</A></SPAN>, 
with the addition of the value <SPAN class=css>'auto'</SPAN>, specifically: 
<DL>
  <DT>
  <DT>&lt;percentage&gt; &lt;percentage&gt; 
  <DD>With a value pair of '0% 0%', the upper left corner of the image is 
  aligned with the upper left corner of the box's padding edge. A value pair of 
  '100% 100%' places the lower right corner of the image in the lower right 
  corner of padding area. With a value pair of '14% 84%', the point 14% across 
  and 84% down the image is to be placed at the point 14% across and 84% down 
  the padding area. 
  <DT>&lt;length&gt; &lt;length&gt; 
  <DD>With a value pair of '2cm 2cm', the upper left corner of the image is 
  placed 2cm to the right and 2cm below the upper left corner of the padding 
  area. 
  <DT>'top left', 'left top' 
  <DD>Same as '0% 0%'. 
  <DT>'top', 'top center', 'center top' 
  <DD>Same as '50% 0%'. 
  <DT>'right top', 'top right' 
  <DD>Same as '100% 0%'. 
  <DT>'left', 'left center', 'center left' 
  <DD>Same as '0% 50%'. 
  <DT>'center', 'center center' 
  <DD>Same as '50% 50%'. 
  <DT>'right', 'right center', 'center right' 
  <DD>Same as '100% 50%'. 
  <DT>'bottom left', 'left bottom' 
  <DD>Same as '0% 100%'. 
  <DT>'bottom', 'bottom center', 'center bottom' 
  <DD>Same as '50% 100%'. 
  <DT>'bottom right', 'right bottom' 
  <DD>Same as '100% 100%'. 
  <DT>'auto' 
  <DD>Put one of the object's corners in the corresponding corner of the box, 
  depending on the element's <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN>: 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>writing-mode 
      <TH>corner 
    <TR>
      <TD>lr-tb 
      <TD>top left 
    <TR>
      <TD>rl-tb 
      <TD>top right 
    <TR>
      <TD>tb-rl 
      <TD>top right 
    <TR>
      <TD>tb-lr 
      <TD>top left 
    <TR>
      <TD>bt-rl 
      <TD>bottom right 
    <TR>
      <TD>bt-lr 
      <TD>bottom left </TR></TBODY></TABLE></DD></DL>
<P>The computed value is the same as the specified value, i.e., the keywords are 
not replaced by percentages and the percentages are not replaced by something 
else. (This is an exception to the general rule that percentages are computed to 
some other value before being inherited.) 
<P class=note>Note: these properties do not exist in CSS2. 
<P class=note>Note that areas of the box not covered by the replaced element 
will show the element's <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#background">'background'</A></SPAN>. 
<P class=note>Note: the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#fit">'fit'</A></SPAN> property has the same 
meaning as the <SPAN class=html><A 
href="http://www.w3.org/TR/css3-box/#fit">fit</A></SPAN> attribute in <A 
href="http://www.w3.org/TR/css3-box/#SMIL10" rel=biblioentry>[SMIL10]</A>, 
except that the value "scroll" is not available, because the <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> property 
can be used instead. 
<H2 id=the-crop><SPAN class=secno>12. </SPAN>The 'crop' property</H2>
<P class=issue>[This section should move to the "Generated &amp; Replaced 
Content" module.] 
<TABLE class=propdef id=name-15>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=crop>crop</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD><VAR>&lt;shape&gt;</VAR> | none 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>relative to intrinsic size 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P class=issue>Do we want this? Or should people just copy the image and cut it 
before sending it to a browser? 
<P class=issue>Call 'none' 'auto' instead? That's what it's called in 'clip'. 
<P>This property allows a replaced element to be just a rectangular area of an 
object, instead of the whole object. 
<P>The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> property adds a 
step when determining the <EM><A 
href="http://www.w3.org/TR/css3-box/#intrinsic0">intrinsic width</A></EM> and 
<EM><A href="http://www.w3.org/TR/css3-box/#height"><SPAN 
title="intrinsic&#10;height">height</SPAN></A></EM> of an element. With <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> 
the notion of <EM>computed</EM> intrinsic width and height are introduced. When 
the layout algorithms reference the "intrinsic width" (and/or height), they are 
referring to the computed intrinsic width and height. 
<P>The computed intrinsic width and height of an element are the result of 
applying the crop to the actual intrinsic width and height of the element. 
<DL>
  <DT>'auto' 
  <DD>The element's computed intrinsic width and height are the same as its 
  actual intrinsic width and height. 
  <DT>rect(<VAR>top</VAR>, <VAR>right</VAR>, <VAR>bottom</VAR>, <VAR>left</VAR>) 

  <DD>Each of the four arguments can be a <VAR>&lt;length&gt;</VAR> or a 
  <VAR>&lt;percentage&gt;</VAR>. All percentage values are computed relative to 
  the intrinsic dimensions of the element. Values are offsets relative to the 
  top left of the element. The computed intrinsic width and height of the 
  element are determined by subtracting the left from the right for the width, 
  and similarly top from bottom for the height. However, if this computation 
  results in a negative value, it is considered to be zero. 
  <DT>inset-rect(<VAR>top</VAR>, <VAR>right</VAR>, <VAR>bottom</VAR>, 
  <VAR>left</VAR>) 
  <DD>Like rect(), except that the values are offsets relative to the respective 
  edges of the element. </DD></DL>
<P>If the element does not have an intrinsic width, the UA may in some cases be 
able to infer the intrinsic width that the style sheet writer assumed. First the 
UA must find the computed <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> and computed 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN> and then the 
intrinsic width can be found as follows (the intrinsic height is analogous): 
<OL>
  <LI>If <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> is <SPAN 
  class=css>'auto'</SPAN>, the assumed intrinsic width is the same as the 
  computed value of <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> 
  <LI>If <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> is <SPAN 
  class=css>'rect(t, r, b, l)'</SPAN> and r is a percentage, the intrinsic width 
  can be solved from the equation: r = computed <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> + l 
  <LI>If <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> is <SPAN 
  class=css>'rect(t, r, b, l)'</SPAN> and r is <EM>not</EM> a percentage, the 
  intrinsic width cannot be computed <SPAN class=issue>and the result is UA 
  dependent</SPAN>. 
  <LI>If <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> is <SPAN 
  class=css>'inset-rect(t, r, b, l)'</SPAN>, then the intrinsic width can always 
  be solved from the equation intrinsic width = l + computed <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> + r </LI></OL>
<P class=note>Note: <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> does not impact the 
scaling, stretching, tiling or positioning of the replaced element. 'crop' 
simply allows the author to essentially use a part of a replaced element in 
place of the element itself for all intents and purposes. For control over 
scaling, stretching and positioning, please see the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#fit">'fit'</A></SPAN>, <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#fit-position">'fit-position'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> properties. 

<DIV class=example>
<P>The following example displays both the whole sheep and its head: <PRE>&lt;p&gt;Here is Woolly, the CSS sheep:
&lt;img src="woolly" alt="Woolly"&gt;
&lt;p&gt;And here he is as a thumbnail:
&lt;img src="woolly" alt="Woolly thumbnail"
  style="crop: rect(0px, 115px, 85px, 30px)"&gt;</PRE>
<P>The result might look like this: 
<DIV class=figure>
<P><IMG alt="Cropping instead of scaling" 
src="CSS3 module The box model_bestanden/crop.png"> </P>
<P class=caption>The same image, once uncropped, once cropped. </P></DIV></DIV>
<H2 id=floating><SPAN class=secno>13. </SPAN>Floating boxes</H2>
<P>A float is a box that creates a new flow, while the parent flow wraps around 
it. The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> property 
determines where the box is positioned relative to the parent flow: left or 
right (for horizontal flows), top or bottom (for vertical flows) 
<DIV class=example>
<P>Example: the following rule floats all IMG boxes with 
<SAMP>class="icon"</SAMP> to the left (and sets the left margin to '0'): <PRE>IMG.icon { 
  float: left;
  margin-left: 0;
}</PRE></DIV>
<DIV class=html-example>
<P>Consider the following HTML source and style sheet: <PRE>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"&gt;
&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;TITLE&gt;Float example&lt;/TITLE&gt;
    &lt;STYLE type="text/css"&gt;
      IMG { float: left }
      BODY, P, IMG { margin: 2em }
    &lt;/STYLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;P&gt;&lt;IMG src=img.gif alt="This image will illustrate floats"&gt;
       Some sample text that has no other...
  &lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<P>The IMG box is floated to the left. The content that follows is formatted to 
the right of the float, starting on the same line as the float. The line boxes 
to the right of the float are shortened due to the float's presence, but resume 
their "normal" width (that of the containing block established by the P element) 
after the float. This document might be formatted as: 
<DIV class=figure>
<P><IMG alt="Image illustrating how floating boxes interact with margins." 
src="CSS3 module The box model_bestanden/floateg.gif"><!--<span
class="dlink"><a name="img-floateg"
href="images/longdesc/floateg-desc.html"
title="Long description of float and text flow example">[D]</a></span>--> 
</P></DIV>
<P>Formatting would have been exactly the same if the body of the document had 
been: <PRE>&lt;BODY&gt;
  &lt;P&gt;Some sample text 
  &lt;IMG src=image.gif alt="This image will illustrate floats"&gt;
           that has no other...
&lt;/BODY&gt;</PRE>
<P>because the content to the left of the float is displaced by the float and 
re-flowed down its right side. </P></DIV>
<H3 id=the-float><SPAN class=secno>13.1. </SPAN>The 'float' property</H3><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name-16>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=float>float</DFN> 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>left | right | top | bottom | inside | outside | start | end | none 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>none 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>all but positioned elements, generated content, and the root element 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>The values have the following meanings: 
<DL>
  <DT>left, top 
  <DD>If the <EM><A href="http://www.w3.org/TR/css3-box/#containing">containing 
  block</A></EM> has <EM><A 
  href="http://www.w3.org/TR/css3-box/#horizontal">horizontal flow</A></EM>: the 
  element generates a box that is floated to the left. Content flows on the 
  right side of the box, starting at the top (subject to the <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#clear">'clear'</A></SPAN> property). If 
  the <EM><A href="http://www.w3.org/TR/css3-box/#containing">containing 
  block</A></EM> has <EM><A 
  href="http://www.w3.org/TR/css3-box/#vertical">vertical flow</A></EM> the box 
  is floated to the top and content flows on the bottom side of the box (subject 
  to the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#clear">'clear'</A></SPAN> property). 
  <P class=note>Note: for readability it is recommended to use <SPAN 
  class=css>'left'</SPAN> in style sheets for horizontal flow and <SPAN 
  class=css>'top'</SPAN> for vertical flow. 
  <P class=issue>It would be more intuitive (less surprising) if 'left' only 
  worked in horizontal flow and 'top' only in vertical flow. </P>
  <DT>right, bottom 
  <DD>Analogous to '<SPAN class=css>left'</SPAN>, but content flows on the left 
  side, respectively the top side of the box. 
  <DT>inside 
  <DD>Same effect as <SPAN class=css>'left'</SPAN> or <SPAN 
  class=css>'right'</SPAN> depending on whether the float will appears on a 
  right, resp. left page in paged media. Same as <SPAN class=css>'left'</SPAN> 
  on non-paged media. (See the Paged media module [ref] for information on 
  left/right pages.) 
  <DT>outside 
  <DD>Same effect as <SPAN class=css>'right'</SPAN> or <SPAN 
  class=css>'left'</SPAN> depending on whether the float will appears on a 
  right, resp. left page in paged media. Same as <SPAN class=css>'right'</SPAN> 
  on non-paged media. 
  <DT>start 
  <DD>Same effect as either 'left', 'right', 'top' or 'bottom, depending on the 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  containing block, as follows: 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>'direction' 
      <TH>effect 
    <TR>
      <TH>ltr 
      <TD>left/top 
    <TR>
      <TH>rtl 
      <TD>right/bottom </TR></TBODY></TABLE>
  <DT>end 
  <DD>Same effect as either 'left', 'right', 'top' or 'bottom', depending on the 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  containing block, as follows: 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>'direction' 
      <TH>effect 
    <TR>
      <TH>ltr 
      <TD>right/bottom 
    <TR>
      <TH>rtl 
      <TD>left/top </TR></TBODY></TABLE>
  <DT>none 
  <DD>The box is not floated. </DD></DL>
<P class=note>Note: The keywords 'start' and 'end' are intended to be mnemonic 
for floating towards the "start of the line" and "end of the line" respectively. 
They are most useful for floats that must float to the left or right depending 
on the script and in those cases avoid having to use language selectors. 
<P class=note>Note that the <A 
href="http://www.w3.org/TR/css3-box/#computed">computed value of <SPAN 
class=property>'display-role'</SPAN></A> is influenced by <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN>. 
<P>A floating box causes the content of elements in its parent flow to wrap 
around the rectangular outline of the floating box only, not around any 
descendant box of the floating box that may stick out of the floating box. (Note 
that whether such a descendant overlaps other content or is clipped depends on 
the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> property.) 

<P class=issue>["Floating" to top/bottom of a page is a different mechanism; 
text does not wrap around such elements. See "paged media" module.] 
<P><SPAN class=index-def id=here-are title="float rules">Here are the precise 
rules</SPAN> that govern the behavior of floats (rules are for <EM><A 
href="http://www.w3.org/TR/css3-box/#horizontal">horizontal flow</A></EM>, 
vertical flow is analogous): 
<OL id=float-rules>
  <LI><STRONG>Principle of horizontal containment:</STRONG> The left <EM><A 
  href="http://www.w3.org/TR/css3-box/#margin0">margin edge</A></EM> of a 
  left-floating box may not be to the left of the left edge of its <EM><A 
  href="http://www.w3.org/TR/css3-box/#containing">containing block</A></EM>. An 
  analogous rule holds for right-floating boxes. (Note that margins can be 
  negative, so the <EM>content</EM> might still be outside the containing 
  block.) 
  <LI><STRONG>Principle of vertical containment:</STRONG> A floating box's top 
  margin edge may not be higher than the top of its containing block. 
  <LI><STRONG>Principle of avoidance of overflow:</STRONG> The right margin edge 
  of a left floating box may not be to the right of the right edge of its 
  containing block, unless its left margin edge coincides with the containing 
  block's left edge. Analogous for a right-floating box. (This makes floating 
  boxes "wrap" when their collective width would be wider than the containing 
  block. The only case where a float can cause overflow is when the float itself 
  is wider than the containing block.) 
  <LI><STRONG>Principle of preservation of ordering:</STRONG> The top margin 
  edge of a floating box may not be higher than the top margin edge of any float 
  or block-level box in the current flow that is generated by an earlier element 
  in the document. 
  <LI><STRONG>Principle of progressive rendering:</STRONG> The top margin edge 
  of a floating box may not be higher than the top of any <SPAN class=index-inst 
  id=line-box0 title=line-box>line box</SPAN> that contains a box generated by 
  an element earlier in the source. (This ensures that lines above the current 
  one, that may already have been rendered, do not have to be redrawn.) 
  <LI><STRONG>Principle of excluded quarter planes:</STRONG> If there is an 
  earlier left-floating box in the current flow, the left margin-edge of the 
  current box must be to the right of that box's right margin-edge or the 
  current box's top margin edge must be below its bottom margin edge. If there 
  is an earlier right floating box, the right margin-edge of the current box 
  must be to the left of the earlier box's left margin edge, or the current 
  box's top margin edge must be below its bottom margin edge. (Note: another 
  name for this principle might be "avoiding overlap", but it is stronger than 
  that.) 
  <LI><STRONG>Principle of tight packing:</STRONG> A floating box must be placed 
  as high as possible without violating principles 1-6. 
  <LI><STRONG>Principle of meaningful names:</STRONG> A left-floating box must 
  be put as far to the left as possible, a right-floating box as far to the 
  right as possible, without violating principles 1-7. </LI></OL>
<P class=note>Note: in CSS2, the rules were the same, but phrased and numbered 
differently: 2 + 3 are now 6, 4 is now 2, 5 is now 4, 6 is now 5, 7 is now 3, 8 
is now 7, 9 is now 8. 
<P>In a multicolumn box [link], [...] 
<DIV class=example>
<P>Here is an illustration of the rules. Assume this source fragment: <PRE>&lt;STYLE TYPE="text/css"&gt;
  P { width: 24em }
  #L1 { float: left; width: 8em; height: 3em }
  #L2 { float: left; width: 4em; height: 6em }
  #R1 { float: right; width: 6em; height: 9em }
  #L3 { float: left; width: 7em; height: 9em }
  #R2 { float: right; width: 3em; height: 5em }
&lt;/STYLE&gt;
&lt;P&gt;
  &lt;IMG ID=L1 SRC="L1.png" ALT="L1"&gt;
  &lt;IMG ID=L2 SRC="L2.png" ALT="L2"&gt;
  &lt;IMG ID=R1 SRC="R1.png" ALT="R1"&gt;
  &lt;IMG ID=L3 SRC="L3.png" ALT="L3"&gt;
  &lt;IMG ID=R2 SRC="R2.png" ALT="R2"&gt;
  blah bla blah bla blah...
&lt;/P&gt;</PRE>
<P>The figure below shows the result. Note that L3 could not be to the right of 
L1 and L2, so it had to be below both of them. R2 could not be placed higher 
than L3, because it came after L3. 
<DIV class=figure>
<P><IMG alt="How floating boxes are positioned" 
src="CSS3 module The box model_bestanden/packing.png"> </P>
<P class=caption>Layout of floating boxes. </P></DIV></DIV>
<P>A float can overlap boxes in its parent <EM><A 
href="http://www.w3.org/TR/css3-box/#flow">flow</A></EM> (e.g., when a normal 
flow box next to a float has negative margins or a negative <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#text-indent">'text-indent'</A></SPAN>). 
When an <EM><A href="http://www.w3.org/TR/css3-box/#inline-level">inline-level 
box</A></EM> overlaps with a float, it should be rendered in front of the float. 
When a <EM><A href="http://www.w3.org/TR/css3-box/#block-level">block-level 
box</A></EM> overlaps, it must be rendered behind the float. Note that any 
textual content of that block-level box should still be drawn in front of the 
float, because it is considered part of (possibly <SPAN 
title="anonymous inline element"><A 
href="http://www.w3.org/TR/css3-box/#anonymous">anonymous</A></SPAN>) 
inline-level boxes. On the other hand, the content of a block-level <EM><A 
href="http://www.w3.org/TR/css3-box/#replaced">replaced element</A></EM> is 
drawn behind it. 
<P>For performance reasons, however, a UA may choose to draw inline-level boxes 
behind the float as well. 
<P class=note>Note that this is a change from CSS2 and CSS1, where a UA was not 
allowed to draw those inline-level boxes behind the float. 
<DIV class=example>
<P>Here is an illustration, showing what happens when a float overlaps borders 
of elements in the normal flow. 
<DIV class=figure>
<P><IMG 
alt="Image showing a floating image that overlaps the borders of two&#10;paragraphs: the borders are interrupted by the image." 
src="CSS3 module The box model_bestanden/float2p.png"><!--<span
class="dlink"><a name="img-float2p"
href="images/longdesc/float2p-desc.html"
title="Long description of how floats overlap with boxes in normal flow">[D]</a></span>--> 
</P>
<P class=caption>A floating image obscures borders of block boxes it overlaps. 
</P></DIV></DIV>
<P class=issue>The problem seems to be that we expect the background of blocks 
with a negative top margin to obscure the text of earlier blocks, but we don't 
expect a "normal" block (with a nonnegative margin) to obscure any text that 
might overflow from the previous block. Maybe the negative margin has an effect 
on the z-index. Or maybe we should say that blocks with negative margins do 
<EM>not</EM> obscure earlier text, unless specified to do so by means of 
z-index. 
<DIV class=note>
<P>Note that the rule about blocks behind floats and floats behind text may lead 
to a visually inconsistent situation, as in the following figure. 
<DIV class=figure>
<P><IMG 
alt="The text is on top of the float, the float is on top of the&#10;border, the border is on top of the float. It looks inconsistent, but it can&#10;actually be drawn." 
src="CSS3 module The box model_bestanden/inconsistent-float.png"> </P>
<P class=caption>The second block has a negative top margin, causing it to be on 
top of the text of the previous block. The float is both on top of the second 
block and behind the text of the first. </P></DIV></DIV>
<DIV class=issue>
<P>An old idea (at least <A 
href="http://www.w3.org/TR/WD-css1-960717.html#float">from 1996</A>) is to add a 
value 'contour' to <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN>, so that the 
float is no longer rectangular, but takes on its "intrinsic" shape. This allows 
to wrap text around it much tighter. The syntax of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> becomes: 
<BLOCKQUOTE>
  <P><EM>Value:</EM> [ &lt;float-side&gt; || &lt;wrap-type&gt; ] </P></BLOCKQUOTE>
<P>where &lt;float-side&gt; is: left | right | top | bottom | inside | outside | 
start | end | none; and &lt;wrap-type&gt; is box | contour. The default 
&lt;float-side&gt; is 'none' and the default &lt;wrap-type&gt; is 'box'. 
<P>How to find the shape of an object depends on the type of object. For a GIF 
or PNG image, the contour is the boundary between fully transparent parts of the 
image and the rest. For other objects, it is possible to define a 'shape' 
property to explicitly define the desired contour, but that may be taking it too 
far. 
<P>For a left-floating object, only the right and bottom edges of the contour 
are used, and the contour is "simplified" so that there are no holes and text is 
never interrupted by part of the float. </P></DIV>
<H3 id=the-clear><SPAN class=secno>13.2. </SPAN>The clear property</H3><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<TABLE class=propdef id=name-17>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=clear>clear</DFN> 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>none | left | right | top | bottom | inside | outside | start | end | 
      both 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>none 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>block-level elements 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>This property indicates which sides of an element's box(es) may <EM>not</EM> 
be adjacent to an earlier floating box. (It may be that the element itself has 
floating descendants; the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#clear">'clear'</A></SPAN> property has no 
effect on those.) 
<P>This property only applies to <SPAN>block-level</SPAN> elements (including 
floats). For <SPAN>compact</SPAN> and <SPAN>run-in</SPAN> boxes, this property 
applies to the final block box to which the compact or run-in box belongs. 
<P>Values have the following meanings when applied to non-floating block boxes: 
<DL>
  <DT><STRONG>left, top</STRONG> 
  <DD>If the element is in a <EM><A 
  href="http://www.w3.org/TR/css3-box/#horizontal">horizontal flow</A></EM>, the 
  top margin of the generated box is increased enough that the top border edge 
  is below the bottom margin edge of any left-floating boxes that resulted from 
  elements earlier in the source document. If the containing block has a <EM><A 
  href="http://www.w3.org/TR/css3-box/#vertical">vertical flow</A></EM>, the 
  right margin is increased so that the right border edge is to the left of the 
  left margin edge of any earlier top-floating boxes. In <EM>vertical-lr 
  flow</EM>, the left margin is increased until the left border edge is to the 
  right of the right margin edge of any earlier top floats. 
  <DT><STRONG>right, bottom</STRONG> 
  <DD>Analogous, but the margin is increased to stay clear of any right/bottom 
  floating boxes, rather than left/top ones. 
  <DT>inside 
  <DD>Same effect as <SPAN class=css>'left'</SPAN> or <SPAN 
  class=css>'right'</SPAN> depending on whether the element's boxes will appears 
  on a right, resp. left page in paged media. Same as <SPAN 
  class=css>'left'</SPAN> on non-paged media. (See the Paged media module [ref] 
  for information on left/right pages.) 
  <DT>outside 
  <DD>Same effect as <SPAN class=css>'right'</SPAN> or <SPAN 
  class=css>'left'</SPAN> depending on whether the element's boxes will appears 
  on a right, resp. left page in paged media. Same as <SPAN 
  class=css>'right'</SPAN> on non-paged media. 
  <DT>start 
  <DD>Same effect as either 'left', 'right', 'top' or 'bottom, depending on the 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  element, as follows: 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>'direction' 
      <TH>effect 
    <TR>
      <TH>ltr 
      <TD>left/top 
    <TR>
      <TH>rtl 
      <TD>right/bottom </TR></TBODY></TABLE>
  <DT>end 
  <DD>Same effect as either 'left', 'right', 'top' or 'bottom', depending on the 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  element, as follows: 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>'direction' 
      <TH>effect 
    <TR>
      <TH>ltr 
      <TD>right/bottom 
    <TR>
      <TH>rtl 
      <TD>left/top </TR></TBODY></TABLE>
  <DT><STRONG>both</STRONG> 
  <DD>The generated box is moved clear of both left/top and right/bottom 
  floating boxes of earlier elements in the source document. 
  <DT><STRONG>none</STRONG> 
  <DD>No constraint on the box's position with respect to floats. </DD></DL>
<P class=issue>[Be more precise about the order in which margins are 
established: collapse first, then add effect of clear; collapse positive margins 
only, then add 'clear, then add negative margins; collapse earlier elements 
only, then add clear, then collapse following elements... Need to dig out an old 
thread on www-style.] 
<P>When the property is set on floating elements, it results in a modification 
of the <A href="http://www.w3.org/TR/css3-box/#float-rules">rules</A> for 
positioning the float. An extra constraint is added: 
<UL>
  <LI>The top <EM><A href="http://www.w3.org/TR/css3-box/#margin0">margin 
  edge</A></EM> of the float must be below the bottom margin edge of all earlier 
  left-floating boxes (in the case of 'clear: left'), or all earlier 
  right-floating boxes (in the case of 'clear: right'), or both ('clear: both'). 
  </LI></UL>
<P>[define vertical case] 
<DIV class=example>
<P>Example. Assuming a rule such as this: <PRE>P { clear: left }</PRE>
<P>formatting might look like this: 
<DIV class=figure>
<P><IMG 
alt="Image showing a floating image and the effect of 'clear: left'&#10;on the two paragraphs." 
src="CSS3 module The box model_bestanden/floatclear.png"><!--<span
class="dlink"><a name="img-floatclear"
href="images/longdesc/floatclear-desc.html"
title="Long description of how floats overlap with boxes in normal flow">[D]</a></span>--> 
</P>
<P class=caption>Both paragraphs have set 'clear: left', which causes the second 
paragraph to be "pushed down" to a position below the float -- its top margin 
expands to accomplish this. </P></DIV></DIV>
<H3 id=the-clear-after><SPAN class=secno>13.3. </SPAN>The clear-after 
property</H3><!--<p class="testlink"><a href="testsuite">&#8594;Test</a></p>-->
<P>
<TABLE class=propdef id=name-18>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=clear-after>clear-after</DFN> 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>none | left | right | top | bottom | inside | outside | start | end | 
      both 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>none 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>block-level elements 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>It is sometimes useful to make sure that the bottom border of a block-level 
element goes below floating elements. The 'clear-after' property increases the 
bottom padding as needed. The padding-bottom will be calculated from the bottom 
margin-edge of the lowest float that originates in the same flow and comes 
before the end of the element, i.e., including floating descendants of the 
element itself. 
<P>Which padding is increased depends in fact on the <EM>orientation:</EM> in 
horizontal orientation (<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> is 
<SPAN class=css>'lr-tb'</SPAN> or <SPAN class=css>'rl-tb'</SPAN>), the bottom 
padding is increased, in vertical orientation (<SPAN class=css>'tb-rl'</SPAN> or 
<SPAN class=css>'bt-rl'</SPAN>) the left padding and in vertical-lr (<SPAN 
class=css>'tb-lr'</SPAN> or <SPAN class=css>'bt-lr'</SPAN>) the right padding. 
<P class=note>Note: Since a floating element is a <EM>flow root,</EM> setting 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#clear-after">'clear-after'</A></SPAN> on 
such an element only takes into account any descendant floats in the flow 
established by the element itself. 
<P>The value of the property determines which kinds of floats are taken into 
account: 
<DL>
  <DT>none 
  <DD>No effect. 
  <DT>left, top 
  <DD>Only left and top floating elements are considered. 
  <DT>right, bottom 
  <DD>Only right and bottom floating elements are considered, 
  <DT>inside 
  <DD>If the bottom of the element occurs on a right-hand page, only left 
  floating elements are considered. On a left-hand page, only right floating 
  elements. On media that are not paged, 'inside' means the same as 'left'. 
  <DT>outside 
  <DD>Analogous 
  <DT>start 
  <DD>If the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  element is 'ltr', same as 'left', otherwise same as 'right'. 
  <DT>end 
  <DD>If the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#direction">'direction'</A></SPAN> of the 
  element is 'ltr', same as 'right', otherwise same as 'left'. 
  <DT>both 
  <DD>Both left/top and right/bottom floats are considered. </DD></DL>
<DIV class=figure>
<P><IMG alt=" " src="CSS3 module The box model_bestanden/clear-after.png"> </P>
<P class=caption>The effect of 'clear-after: left' on a paragraph next to a 
floating image: the bottom padding of the paragraph is stretched, so that the 
original padding and the border go below the float. </P></DIV>
<DIV class=issue>
<P>Instead of a new property 'clear-after', another idea is to add one or more 
values to 'clear'. If 'clear' is turned into a set, instead of a single value, 
one could add the value'after' (clears both left and right floats) or several 
values like 'left-after' and 'right-after': 
<TABLE class=propdef id=name-19>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD>clear 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>none | [ left | right | top | bottom | inside | outside | start | end 
      | both | after]+ 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>none 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>block-level elements 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>The following rule would ensure that a SECTION starts below all preceding 
floats and doesn't end until after all floats it contains: <PRE>section {clear: left right after}</PRE></DIV>
<H3 id=the-float-displace><SPAN class=secno>13.4. </SPAN>The 'float-displace' 
property</H3>
<TABLE class=propdef id=name-20>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=float-displace>float-displace</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>line | indent | block | block-within-page 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>line 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>all block-level elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>Same as specified value 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>This property determines the line wrapping policy in the presence of floats. 
Values have the following meanings: 
<DL>
  <DT>line 
  <DD>Line boxes should be shortened and moved so as to avoid floats. The 
  margin, border, padding and background of the element are not affected by 
  floats. (This is the behavior as described in CSS2.) <SPAN class=issue>[add 
  description or image?]</SPAN> 
  <DT>indent 
  <DD>The distance between the margin edge of the floats and the start of the 
  line box is set to the distance between the active <EM><A 
  href="http://www.w3.org/TR/css3-box/#reference">reference indent edge</A></EM> 
  (see the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#indent-edge-reset">'indent-edge-reset'</A></SPAN> 
  property) and the content edge of the block box. This ensures that relative 
  indents are preserved in the presence of floats. 
  <DIV class=figure>
  <P><IMG alt="Example of lines wrapping around a float individually." 
  src="CSS3 module The box model_bestanden/float-displace-indent.png"> </P>
  <P class=caption>Example of 'float-displace: indent'. Note that the "bar" 
  paragraph has the same indent (green arrow) next to the float as below it . 
  </P></DIV>
  <DT>block 
  <DD>
  <P>The containing block's width as used by the horizontal formatting model is 
  reduced by the width of the floats intruding upon its content area (not taking 
  into account floating descendants or floating elements that appear later in 
  the document tree). The block is then flowed in this reduced containing block 
  width. 
  <P>If the effective containing block width is, by the algorithm given above, 
  reduced to a value smaller than the sum of the margin-left, border-width-left, 
  padding-left, width, padding-right, border-width-right, and margin-right 
  values (treating any 'auto' values as zero) then the margin-top of the block 
  is increased until the effective containing block width is no longer so 
  constrained or until all floats have been cleared, whichever occurs first. 
  <DIV class=figure>
  <P><IMG alt="Example of blocks being made narrower because of floats" 
  src="CSS3 module The box model_bestanden/float-displace-block.png"> </P>
  <P class=caption>Example of 'float-displace: block' </P></DIV>
  <DT>block-within-page 
  <DD>As for the 'block' value, but the determination of intrusions that adjust 
  the width of the block is done separately on each page on which the block 
  appears. Thus, the block may be narrowed on the first page due to one or more 
  intrusions, but may expand (or contract) its width on subsequent pages with 
  different intrusions. The computed value of the 'width' property for this case 
  is...? </DD></DL>
<DIV class=example>
<P>A set of rules for HTML might look like this: <PRE>OL, UL, LI {float-displace: indent}
TABLE {float-displace: block}</PRE>
<P>Lines in a list will get extra indentation when they are next to a float, so 
you can still see that they are part of the list, and tables will be made 
narrower as a whole. </P></DIV>
<H2 id=the-indent-edge-reset><SPAN class=secno>14. </SPAN>The 
'indent-edge-reset' property</H2>
<TABLE class=propdef id=name-21>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=indent-edge-reset>indent-edge-reset</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>none | margin-edge | border-edge | padding-edge | content-edge | 
      inherit 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>none 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>all elements with a block-level inner formatting context. 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>n/a 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>This property determines which edge to use as the <DFN id=reference>reference 
indent edge</DFN> when calculating the amount of indent to preserve when the 
value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#float-displace">'float-displace'</A></SPAN> 
is set to <SPAN class=css>'indent'</SPAN>. 
<DL>
  <DT>none 
  <DD>This block does not introduce a new reference edge. 
  <DT>margin-edge 
  <DT>border-edge 
  <DT>padding-edge 
  <DT>content-edge 
  <DD>A new reference indent edge is introduced by this block. Which edge is 
  used as the reference indent edge is determined by which value is given. 
</DD></DL>
<P>The reference indent edge is the nearest ancestor in the same formatting 
context which has a non-none value for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#indent-edge-reset">'indent-edge-reset'</A></SPAN>. 
If no ancestor in the formatting context has a value specified for this 
property, then the content edge of the root of the formatting context is used. 
<H2 id=collapsing><SPAN class=secno>15. </SPAN>Collapsing margins</H2>
<P>The top and bottom margins of a <EM><A 
href="http://www.w3.org/TR/css3-box/#block-level">block-level box</A></EM> 
define the minimum distance of the box to block-level boxes above and below it. 
The actual distance between boxes is the maximum of the margins involved (unless 
there are any negative margins, see below). We say that such margins <DFN 
id=collapse title="collapsing&#10;margins">collapse</DFN>. 
<DIV class=example>
<P>For example, in this HTML fragment <PRE>&lt;UL STYLE="margin-bottom: 1em"&gt;
  &lt;LI STYLE="margin-bottom: 0.5em"&gt;...&lt;/LI&gt;
&lt;/UL&gt;
&lt;P STYLE="margin-top: 0.6em"&gt;
  ...
&lt;/P&gt;</PRE>
<P>and assuming there are no paddings and borders, the bottom of the last line 
box of the &lt;LI&gt; will be 1em above the top of the first line box of the 
&lt;P&gt;, since 1em is the maximum of the three margins. </P></DIV>
<P>The principle is that adjacent margins of block-level boxes in the same flow 
collapse. The precise rules are below. 
<P>When the margins of two or more boxes collapse, it means that the computed 
value of all margins involved is the maximum of the nonnegative specified 
margins plus the minimum of the negative specified margins. <SPAN 
class=example>E.g., if there are four margins that collapse and their values are 
1.5cm, 2cm, -1cm and -1.2cm, the computed value of all four of them will be 
max(1.5cm, 2cm) - max(1cm, 1.2cm) = 2cm - 1.2cm = 0.8cm.</SPAN> 
<P class=note>Note that this means that "collapsing" is a commutative relation 
(if margin A collapses with margin B, then margin B collapses with margin A) as 
well as a transitive relation (if A collapses with B and B collapses with C, 
then A collapses with C). 
<P>For the purposes of these rules, elements with <SPAN class=css>'display: 
none</SPAN>' are treated as if they did not exist at all. 
<P>Margins of <EM title="floating box"><A 
href="http://www.w3.org/TR/css3-box/#floating0">floating boxes</A></EM> never 
collapse, neither with normal flow boxes nor with other floating boxes. 
<P class=note>Note that margins of absolutely positioned boxes also do not 
collapse with any other margins. See <A 
href="http://www.w3.org/TR/css3-box/#CSS3POS" rel=biblioentry>[CSS3POS]</A>. 
<P class=issue>[CSS2 said that margins of relatively positioned boxes also do 
not collapse, but that looks like a mistake.] 
<P>In a <EM><A href="http://www.w3.org/TR/css3-box/#horizontal">horizontal 
flow</A></EM>, the following margins collapse: 
<OL>
  <LI>The bottom margin of a box and the bottom margin of its last child, 
  provided both are block-level and the former has no bottom padding, no bottom 
  border and horizontal flow. 
  <LI>The top margin of a box and the top margin of its first child, provided 
  both are block-level and the former has no top padding, no top border and 
  horizontal flow. 
  <LI>The bottom margin of a box and the top margin of its next sibling, 
  provided both are block-level. 
  <LI>The top and bottom margin of a <SPAN><A 
  href="http://www.w3.org/TR/css3-box/#block-level">block-level box</A></SPAN>, 
  if the the box has a height of <SPAN class=css>'auto'</SPAN> or 0, no top or 
  bottom padding, no top or bottom border and no content (i.e., no line boxes 
  and no replaced content). </LI></OL>
<DIV class=note>
<P>Note that "no content" is not the same as "empty element" in XML. For 
example, an empty element may have content because of generated text <A 
href="http://www.w3.org/TR/css3-box/#CSS3GENCON" 
rel=biblioentry>[CSS3GENCON]</A>, and a nonempty element may have no content, 
when none of its descendants has any content. Example: <PRE>&lt;style type="text/css"&gt;
  div.test:before {content: "Test"}
  em {display: none}
&lt;/style&gt;

&lt;div class="test"/&gt;

&lt;div&gt;&lt;em&gt;Nothing here...&lt;/em&gt;&lt;/div&gt;</PRE>
<P>The first <CODE>div</CODE> is an empty element, but does have content (and 
thus its top and bottom margins are not adjacent and do not collapse). The 
second <CODE>div</CODE> is not an empty element, but nevertheless it has no 
content, and its top and bottom margins are therefore adjacent and will 
collapse. </P></DIV>
<P>A <EM><A 
href="http://www.w3.org/TR/css3-box/#vertical-rl">vertical-rl</A></EM> flow is 
analogous. To be precise, if the <EM><A 
href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM> of a flow 
is vertical-rl: 
<OL>
  <LI>The left margin of a box collapses with the left margin of its last child, 
  provided both are block level and the former has no left padding, no left 
  border and vertical orientation. 
  <LI>The right margin of a box collapses with the right margin of its first 
  child, provided both are block level and the former has no right padding, no 
  right border and vertical orientation. 
  <LI>The left margin of a box and the right margin of its next sibling, 
  provided both are block-level. 
  <LI>The left and right margin of a block-level box, if it has a width of <SPAN 
  class=css>'auto'</SPAN> or 0, no left or right padding, no left or right 
  border and no content (i.e., no line boxes and no replaced content). </LI></OL>
<P>Analogously, if the orientation is <EM><A 
href="http://www.w3.org/TR/css3-box/#vertical-lr">vertical-lr</A></EM>, the 
following margins collapse: 
<OL>
  <LI>The right margin of a box and the right margin of its last child, provided 
  both are block level and the former has no right padding, no right border and 
  vertical-lr orientation. 
  <LI>The left margin of a box and the left margin of its first child, provided 
  both are block level and the former has no left padding, no left border and 
  vertical-lr orientation. 
  <LI>The right margin of a box and the left margin of its next sibling, 
  provided both are block-level. 
  <LI>The left and right margin of a block-level box, if it has a width of <SPAN 
  class=css>'auto'</SPAN> or 0, no left or right padding, no left or right 
  border and no content (i.e., no line boxes and no replaced content). </LI></OL>
<DIV class=example>
<P>Here are some examples. Assume these style rules: <PRE>H1 { margin-bottom: 2.2em }
H2.subtitle { margin-top: -1em }
P { margin-top: 0.9em; margin-bottom: 0 }
UL { margin-top: 1.6em }
LI { margin-top: 0.6em }
BLOCKQUOTE.break { margin-top: 0.8em; border: thin solid }</PRE>
<P>In the following example, the bottom of the h1 and the top of the h2 collapse 
to a margin of 2.2em - 1em = 1.2em: <PRE>&lt;H1&gt;The flight of the bumblebee&lt;/H1&gt;
&lt;H2 CLASS=subtitle&gt;Accompanied by winds and woods&lt;/H2&gt;</PRE>
<P>In the following example the bottom of the first p, the top of the UL, the 
top of the LI and the top of the second P collapse to a margin of 1.6em = max(0, 
1.6em, 0.6em, 0.9em): <PRE>&lt;P&gt;...in the following list:&lt;/P&gt;
&lt;UL&gt;
  &lt;LI&gt;&lt;P&gt;one item must be the first&lt;/P&gt;&lt;/LI&gt;
&lt;/UL&gt;</PRE>
<P>In the following example, the margins between the H1 and the BLOCKQUOTE 
collapse (2.2em), but the border of the BLOCKQUOTE keeps the P from collapsing 
with either of them. The P starts 0.9em below that border: <PRE>&lt;H1&gt;ceasar's words&lt;/H1&gt;
&lt;BLOCKQUOTE CLASS=break&gt;
  &lt;P&gt;<SPAN lang=la>gallia est omnis divisa in partes tres...</SPAN>&lt;/P&gt;
&lt;/BLOCKQUOTE&gt;</PRE></DIV>
<P class=note>Note that in paged media <A 
href="http://www.w3.org/TR/css3-box/#CSS3PAGE" rel=biblioentry>[CSS3PAGE]</A> 
margins that occur at the top or bottom of a page disappear, in a mechanism 
similar to (but not the same as) collapsing. 
<DIV class=note>
<P>Note that the combination of collapsing margins with floats can interfere 
with progressive rendering to a certain extent. For example, in the following 
situation, the position of the floating div won't be known until the position of 
the div after the float has been calculated, because the two margins (1em and 
2em) have to collapse: 
<DIV class=example><PRE>  ...
  This line is in the normal flow.
&lt;/div&gt;
&lt;div style="display: block; margin-top: 1em"&gt;
  &lt;div style="float: left; background: silver"&gt;
    This is a floating div.
  &lt;/div&gt;
  &lt;div style="display: block; margin-top: 2em"&gt;
    This div is in the normal flow.
  &lt;/div&gt;
&lt;/div&gt;</PRE>
<DIV class=figure>
<P><IMG alt="Float positioned after margins are collapsed" 
src="CSS3 module The box model_bestanden/float-collapse.png"> </P>
<P class=caption>The float is positioned to align with the top of the containing 
block, but the top of the containing block is influenced by the div 
<EM>after</EM> the float. </P></DIV></DIV></DIV>
<H2 id=overflow><SPAN class=secno>16. </SPAN>The 'overflow' property</H2>
<TABLE class=propdef id=name-22>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=overflow0>overflow</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>visible | hidden | scroll | auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>visible 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'Overflow'</A></SPAN> is a 
shorthand for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow-x">'overflow-x'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow-y">'overflow-y'</A></SPAN>. It 
sets both to the same value. 
<P>This property specifies whether the content of a block-level or replaced 
element is clipped when it overflows the element's box (which is acting as a 
containing block for the content). Values have the following meanings: 
<DL>
  <DT><STRONG>visible</STRONG> 
  <DD>This value indicates that content is not clipped, i.e., it may be rendered 
  outside the content box. 
  <DT><STRONG>hidden</STRONG> 
  <DD>This value indicates that the content is clipped and that no scrolling 
  mechanism (<A href="http://www.w3.org/TR/css3-box/#scrolling-mechanism">see 
  below</A>) should be provided to view the content outside the clipping region; 
  users will not have access to clipped content (though access through some 
  alternative mechanism, such as the DOM may still be possible). The size and 
  shape of the clipping region is specified by the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#overflow-clip">'overflow-clip'</A></SPAN> 
  property. 
  <DT><STRONG>scroll</STRONG> 
  <DD>This value indicates that the content is clipped to the content box and 
  that if the user agent uses a scrolling mechanism that is visible on the 
  screen, that mechanism should be displayed for a box whether or not any of its 
  content is clipped. Compared to 'auto', this avoids any problem with 
  scrollbars appearing and disappearing in a dynamic environment. When this 
  value is specified and the target medium is 'print' or 'projection', 
  overflowing content should be printed. 
  <DT><STRONG>auto</STRONG> 
  <DD>The behavior of the 'auto' value is UA-dependent, but should cause a 
  scrolling mechanism to be provided for overflowing boxes. </DD></DL>
<P class=note>Note that <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#text-overflow">'text-overflow'</A></SPAN> 
(see <A href="http://www.w3.org/TR/css3-box/#CSS3TEXT" 
rel=biblioentry>[CSS3TEXT]</A>) can be used to give a visual indication where 
text has been clipped. 
<P class=note>Note that <SPAN class=css>'scroll'</SPAN> and <SPAN 
class=css>'auto'</SPAN> make the element into a <EM title="flow root"><A 
href="http://www.w3.org/TR/css3-box/#flow-root">flow root.</A></EM> 
<P id=scrolling-mechanism>The scrolling mechanism depends on the UA. The most 
common mechanism is a scrollbar, but panners, hand cursors, page flickers, etc. 
are also possible. The mechanism that is recommended for mobile devices is the 
marquee effect. 
<P class=issue>[Should there be a way for the author to select a particular 
scrolling mechanism (even if not all UAs support all methods)?] 
<P>A UA that uses marquee should use the <A 
href="http://www.w3.org/TR/css3-box/#marquee">marquee properties</A> to control 
the way the content moves. If 'overflow' is <SPAN class=css>'auto'</SPAN>, the 
content moves only if it overflows; with <SPAN class=css>'scroll'</SPAN> it 
moves also if it does not overflow. 
<P class=note>Even if <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> is set to 
<SPAN class=css>'visible'</SPAN>, content may be clipped to a UA's document 
window by the native operating environment. 
<DIV class=example>
<P style="DISPLAY: none">Example(s): 
<P>Consider the following example of a block quotation (BLOCKQUOTE) that is too 
big for its containing block (established by a DIV). Here is the source 
document: <PRE class=html-example>&lt;DIV&gt;
&lt;BLOCKQUOTE&gt;
&lt;P&gt;I didn't like the play, but then I saw
it under adverse conditions - the curtain was up.
&lt;DIV class="attributed-to"&gt;- Groucho Marx&lt;/DIV&gt;
&lt;/BLOCKQUOTE&gt;
&lt;/DIV&gt;</PRE>
<P>Here is the style sheet controlling the sizes and style of the generated 
boxes: <PRE>DIV { width : 100px; height: 100px;
      border: thin solid red;
      }

BLOCKQUOTE   { width : 125px; height : 100px;
      margin-top: 50px; margin-left: 50px; 
      border: thin dashed black
      }

DIV.attributed-to { text-align : right; }</PRE>
<P>The initial value of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> is 
'visible', so the BLOCKQUOTE would be formatted without clipping, something like 
this: 
<DIV class=figure>
<P><IMG alt="Rendered overflow" 
src="CSS3 module The box model_bestanden/overflow1.png"><!--<span class="dlink"><a
name="img-overflow1" href="images/longdesc/overflow1-desc.html"
title="Long description for example with unclipped overflow">[D]</a></span>--> 
</P></DIV>
<P>Setting <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> to 
'hidden' for the DIV element, on the other hand, causes the BLOCKQUOTE to be 
clipped by the containing block: 
<DIV class=figure>
<P><IMG alt="Clipped overflow" 
src="CSS3 module The box model_bestanden/overflow2.png"><!--<span class="dlink"><a
name="img-overflow2" href="images/longdesc/overflow2-desc.html"
title="Long description for example with clipped overflow">[D]</a></span>--> 
</P></DIV>
<P>A value of 'scroll' would tell UA's that support a visible scrolling 
mechanism to display one so that users could access the clipped content. 
</P></DIV>
<DIV class=note>
<P>Implementation note: it is recommended that scrolling causes the content and 
the padding to scroll, but the border and the margin to remain fixed. Also, any 
visible scrolling mechanism (scrollbars, panner, etc.) should be placed just 
inside the border. </P></DIV>
<P id=collapse-scroll>The combination of collapsing margins, <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#max-height">'max-height'</A></SPAN> and 
<SPAN class=css>'overflow: auto'</SPAN> can lead to subtle differences in 
implementations, unless special care is taken. A UA should assume that an 
element can be rendered <EM>without</EM> a scrolling mechanism first, perform 
all the collapsing of margins, and check that the content height is indeed less 
than the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#max-height">'max-height'</A></SPAN>. If it 
is not, the process is repeated under the assumption that a scrolling mechanism 
<EM>is</EM> needed. 
<DIV class=example>
<P>In the following document fragment, the outer DIV has <SPAN 
class=css>'height: auto'</SPAN>, but <SPAN class=css>'max-height: 5em'</SPAN>. 
The inner DIV has large margins that do not fit in 5em, but a small content that 
does: <PRE>...
    #d1 { overflow: auto; max-height: 5em }
    #d2 { margin: 3em; line-height: 1 }
...
&lt;div id="d1"&gt;
  &lt;div id="d2"&gt;
    This DIV has big margins.
  &lt;/DIV&gt;
&lt;/DIV&gt;</PRE>
<P>If we assume that d1 needs scroll bars, then all contents of d1 will be 
inside the scrolling region, including the single line of text and twice 3em of 
margins, which adds up to 7em. Since 7em is greater than 5em, the maximum 
allowed height, it seems we made the right assumption and d1 indeed needs 
scrollbars. 
<P>However, we should have started by assuming that no scrollbars are needed. In 
that case the margins of d2 collapse with the margins of d1 and the content 
height of d1 is just the height of the line of text, 1em, which is less than 
5em, proving that the assumption was correct and d1 indeed should not have 
scrollbars. </P></DIV>
<DIV class=issue>
<P>Do we want to give the designer control over what kind of scrolling mechanism 
is provided? Or where it is positioned? In that case we should also provide ways 
to set the color of the visible parts of that mechanism, e.g: 
<BLOCKQUOTE>
  <P>scroller: scrollbar | panner | invisible<BR>scroller-color: 
  &lt;color&gt;<BR>scroller-background: &lt;color&gt;<BR>scroller-position: [ 
  top | bottom | left | right | center ]{1,2} </P></BLOCKQUOTE>
<P>An 'invisible' scrolling mechanism is one that takes up no space in the 
rendering. It may be tied to the mouse wheel, to a combination of keys, to 
something that pops up on top of the box when it gets the focus or is hovered, 
etc. If scrollbars or panners have a 3D look, the "shadows" will be 
automatically computed as for the 3D border styles. The 'scroller-position' 
syntax is more is actually restricted more restricted than shown: 8 positions 
around the edge of the box for 'panner', and 4 edges for 'scrollbar'. </P></DIV>
<H2 id=the-overflow-x><SPAN class=secno>17. </SPAN>The 'overflow-x' and 
'overflow-y' properties</H2>
<TABLE class=propdef id=name-23>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=overflow-x>overflow-x</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>visible | hidden | scroll | auto | inherit 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>visible 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD><A 
      href="http://www.w3.org/TR/REC-CSS2/media.html#visual-media-group">visual</A> 

  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified, except 'visible', see text </TR></TBODY></TABLE>
<P>All values are treated the same as for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN>, but on 
this property, they only affect whether or not the element is horizontally 
clipped or has a horizontal scrolling mechanism. 
<TABLE class=propdef id=name-24>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=overflow-y>overflow-y</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>visible | hidden | scroll | auto | inherit 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>visible 
  <TR>
    <TD><EM>Applies to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD><A 
      href="http://www.w3.org/TR/REC-CSS2/media.html#visual-media-group">visual</A> 

  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified, except 'visible', see text </TR></TBODY></TABLE>
<P>All values are treated the same as for <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN>, but on 
this property, they only affect whether or not the element is vertically clipped 
or has a vertical scrolling mechanism. 
<P>The computed value is the specified value, except in the following case: 
combinations of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow-x">'overflow-x'</A></SPAN> and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow-y">'overflow-y'</A></SPAN> where 
one is <SPAN class=css>'visible'</SPAN> and the other is <SPAN 
class=css>'scroll'</SPAN> or <SPAN class=css>'auto'</SPAN> are not possible. In 
that case the computed value of <SPAN class=css>'visible'</SPAN> will be <SPAN 
class=css>'auto'</SPAN>. 
<P class=issue>[Many combinations give the same result: need to decide if it is 
easier to add extra values to 'overflow' instead: scroll-auto, auto-scroll, 
hidden-auto, auto-hidden, hidden-scroll, scroll-hidden, visible-hidden, 
hidden-visible. Do the combinations with 'hidden' make sense?] 
<H2 id=marquee><SPAN class=secno>18. </SPAN>The marquee properties</H2>
<TABLE class=propdef id=name-25>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=marquee-style>marquee-style</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>none | slide | scroll | alternate 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD class=issue>alternate 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<TABLE class=propdef id=name-26>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=marquee-direction>marquee-direction</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>forwards | backwards | ahead | reverse | left | right | up | down | 
      auto 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<TABLE class=propdef id=name-27>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=marquee-speed>marquee-speed</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>slow | normal | fast | &lt;length&gt; [ / &lt;time&gt; ]? 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>normal 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>&lt;length&gt; </TR></TBODY></TABLE>
<TABLE class=propdef id=name-28>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=marquee-repetition>marquee-repetition</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>&lt;integer&gt; | infinite 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>infinite 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>keyword or &lt;length&gt; </TR></TBODY></TABLE>
<TABLE class=propdef id=name-29>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=marquee0>marquee</DFN> 
  <TR>
    <TD><EM>Value:</EM> 
    <TD>&lt;'marquee-style'&gt; || &lt;'marquee-direction'&gt; || 
      &lt;'marquee-speed'&gt; || &lt;'marquee-repetition'&gt; 
  <TR>
    <TD><EM>Initial:</EM> 
    <TD>(see individual properties) 
  <TR>
    <TD><EM>Applies&nbsp;to:</EM> 
    <TD>block-level and replaced elements 
  <TR>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>(see individual properties) </TR></TBODY></TABLE>
<P>These properties only apply if the UA uses a marquee effect for <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN>. The <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee0">'marquee'</A></SPAN> property is 
a shorthand for the other four. The values have the following meaning: 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-style">'Marquee-style'</A></SPAN>: 
<DL>
  <DT>none 
  <DD>The content does not move at all. 
  <DT>slide 
  <DD>The content starts completely outside the content box, then moves into 
  view and continues until it completely disappears at the other end. 
  <DT>scroll 
  <DD>The content starts completely outside the content box, then moves into 
  view and continues until the last part is inside the content edge. 
  <DT>alternate 
  <DD class=issue>The content starts visible, with one edge of the content 
  against an edge of the box and then moves until the opposite edge of the 
  content is against the opposite edge of the box. It depends on the size of the 
  content (bigger or smaller than the box) and the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#marquee-direction">'marquee-direction'</A></SPAN> 
  at which edge the content starts. </DD></DL>
<P class=note>Note that <SPAN class=css>'none'</SPAN> can also be achieved with 
<SPAN class=css>'overflow: hidden'</SPAN>. 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-direction">'Marquee-direction'</A></SPAN>: 

<DL>
  <DT>left 
  <DD>The content starts by moving left. 
  <DT>right 
  <DD>The content starts by moving right. 
  <DT>up 
  <DD>The content starts by moving up. 
  <DT>down 
  <DD>The content starts by moving down. 
  <DT>forwards 
  <DD>The direction depends on <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN>: 
  the initial direction is the <EM><A 
  href="http://www.w3.org/TR/css3-box/#inline">inline progression 
  direction</A></EM> (i.e., to the right if the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
  is <SPAN class=css>'lr-tb'</SPAN>.) 
  <DT>backwards 
  <DD>The content starts by moving against the <EM><A 
  href="http://www.w3.org/TR/css3-box/#inline">inline progression 
  direction</A></EM> (i.e., to the left if the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
  is <SPAN class=css>'lr-tb'</SPAN>.) 
  <DT>ahead 
  <DD>The content starts by moving in the <EM><A 
  href="http://www.w3.org/TR/css3-box/#block">block progression 
  direction</A></EM> (i.e., down if <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
  is <SPAN class=css>'lr-tb'</SPAN>.) 
  <DT>reverse 
  <DD>The content starts by moving against the <EM><A 
  href="http://www.w3.org/TR/css3-box/#block">block progression 
  direction</A></EM> (i.e., up if <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
  is <SPAN class=css>'lr-tb'</SPAN>.) 
  <DT>auto 
  <DD>If the content doesn't overflow, or overflows only horizontally (in 
  horizontal <SPAN><A 
  href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></SPAN>, or 
  vertically in vertical orientation), then the effect is the same as <SPAN 
  class=css>'backwards'</SPAN>. Otherwise the effect is the same as <SPAN 
  class=css>'reverse'</SPAN>. </DD></DL>
<P>If the content overflows in one direction (say: vertically), but <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-direction">'marquee-direction'</A></SPAN> 
is set to another direction (say: <SPAN class=css>'left'</SPAN>), this prohibits 
the marquee effect from being used to access the clipped text. The UA should 
provide some other scrolling mechanism in that case. 
<P class=note>Note that content moves either horizontally or vertically, not 
both at the same time. Even if the content overflows in both directions and 
<SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-direction">'marquee-direction'</A></SPAN> 
is <SPAN class=css>'auto'</SPAN>, the content only moves up (and down), not 
sideways. (The UA should provide a scrollbar or other mechanism to access the 
text clipped off the side.) 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-speed">'Marquee-speed'</A></SPAN>: 
<DL>
  <DT>slow 
  <DD>The content moves at a slow speed. This should be slower than <SPAN 
  class=css>'normal'</SPAN>. 
  <DT>normal 
  <DD>The content moves at a normal speed. <SPAN class=issue>This should be such 
  that a normal reader can read text in the medium font</SPAN><SPAN class=issue> 
  that is moving </SPAN><SPAN class=issue>'backwards'</SPAN><SPAN class=issue> 
  or </SPAN><SPAN class=issue>'reverse'</SPAN><SPAN class=issue> at this 
  speed.</SPAN> 
  <DT>fast 
  <DD>The content moves at a fast speed. This should be faster than <SPAN 
  class=css>'normal'</SPAN>. 
  <DT>&lt;length&gt; 
  <DD>The content moves this much per second. Negative values are allowed. 
  (E.g., <SPAN class=css>'-4.25px'</SPAN> and <SPAN class=css>'forwards'</SPAN> 
  has the same effect as <SPAN class=css>'4.25px'</SPAN> and <SPAN 
  class=css>'backwards'</SPAN>.) 
  <DT>&lt;length&gt;/&lt;time&gt; 
  <DD>The content moves &lt;length&gt; per &lt;time&gt;. The &lt;time&gt; may 
  not be 0. Negative values are allowed. (E.g., <SPAN 
  class=css>'8.5px/-2s'</SPAN> with <SPAN class=css>'forwards'</SPAN> is 
  equivalent to <SPAN class=css>'4.25px'</SPAN> with <SPAN 
  class=css>'backwards'</SPAN> and also to <SPAN class=css>'-8.5px/2s'</SPAN> 
  with <SPAN class=css>'forwards'</SPAN>.) </DD></DL>
<P class=issue>[Any limit to the conformance requirements on &lt;length&gt;? Or 
is that for the profile to say?] 
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#marquee-repetition">'Marquee-repetition'</A></SPAN>: 

<DL>
  <DT>&lt;integer&gt; 
  <DD>The content moves this many times. The number may not be negative. 
  <DT>infinite 
  <DD>The content moves continually. </DD></DL>
<DIV class=example>
<P>The following may be used to produce a "news ticker" effect on mobile 
devices: <PRE>p { overflow: scroll;
    white-space: nowrap;
    marquee: slide infinite }</PRE></DIV>
<DIV class=example>
<P>To make an overflowing list item on a mobile device move only when it has the 
focus, one could use the following style rules. (By default, the content will 
alternate continuously): <PRE>li { overflow: hidden;
     white-space: nowrap }
li:focus { overflow: scroll }</PRE></DIV>
<H2 id=the-overflow-clip><SPAN class=secno>19. </SPAN>The overflow-clip 
property</H2>
<TABLE cellPadding=0 cellSpacing=0 class=propdef id=name-30>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=overflow-clip>overflow-clip</DFN> 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>auto | rect(...) | inset-rect(...) 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>auto 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>block-level and replaced elements 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>no 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>width and height, see text 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P><SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow-clip">'Overflow-clip'</A></SPAN> 
defines what part of an element's content is visible when <SPAN 
class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> is <SPAN 
class=css>'hidden'</SPAN>. Note that the element's background, padding and 
border are not clipped, although those of any children are. 
<DL>
  <DT>auto 
  <DD>The content is clipped to the element's <EM><A 
  href="http://www.w3.org/TR/css3-box/#content">content area</A></EM> (typically 
  a rectangle of 'width' by 'height', unless the box is split because of page 
  breaks). 
  <DT>rect(<VAR>T</VAR>, <VAR>R</VAR>, <VAR>B</VAR>, <VAR>L</VAR>) 
  <DD>The content is clipped to a rectangle given by four offsets from the top 
  left corner of the content area (or another corner, depending on <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN>). 
  See below for the exact meaning of <VAR>T</VAR>, <VAR>R</VAR>, <VAR>B</VAR> 
  and <VAR>L</VAR>. 
  <DT>inset-rect(<VAR>t</VAR>, <VAR>r</VAR>, <VAR>b</VAR>, <VAR>l</VAR>) 
  <DD>The content is clipped to a rectangle given by four offsets from the four 
  edges of the content area. See below for the exact meaning of <VAR>t</VAR>, 
  <VAR>r</VAR>, <VAR>b</VAR> and <VAR>l</VAR>. </DD></DL>
<P>The four arguments of <SPAN class=css>'rect()'</SPAN> and <SPAN 
class=css>'inset-rect()'</SPAN> must be lengths, <SPAN 
class=issue>percentages</SPAN> or the keyword <SPAN class=css>'auto'</SPAN>. 
They may be negative. Percentages refer to the <EM>actual</EM> values of <SPAN 
class=property><A href="http://www.w3.org/TR/css3-box/#width">'width'</A></SPAN> 
or <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#height">'height'</A></SPAN>. I.e., even if 
their computed value is <SPAN class=css>'auto'</SPAN>, an argument of <SPAN 
class=css>'100%'</SPAN> still refers to the full width or height of the content. 
<SPAN class=note>Note: this is similar to how percentages work on </SPAN><SPAN 
class=note><A 
href="http://www.w3.org/TR/css3-box/#background">'background'</A></SPAN><SPAN 
class=note>.</SPAN> The keyword 'auto' means the same as '0' (<VAR>T</VAR>, 
<VAR>L</VAR>, <VAR>t</VAR>, <VAR>r</VAR>, b<VAR></VAR> and <VAR>l</VAR>), or 
'100%' (<VAR>R</VAR> and <VAR>B</VAR>). 
<P>If <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> is 
<SPAN class=css>'tb-lr'</SPAN> or <SPAN class=css>'tb-rl'</SPAN>, the four 
arguments define the top, right, bottom and left edges of the clipped area, 
respectively. <VAR>T</VAR>, <VAR>B</VAR> and <VAR>t</VAR> are measured downwards 
from the top of the content area; <VAR>R</VAR>, <VAR>L</VAR> and <VAR>l</VAR> 
are measured rightwards from the left edge; <VAR>r</VAR> is measured leftwards 
from the right content edge; and <VAR>b</VAR> is measured up from the bottom 
edge. See the figure below. 
<DIV class=figure>
<P><IMG alt="diagram of rect vs inset-rect" 
src="CSS3 module The box model_bestanden/clip.png"> </P>
<P class=caption>Diagram of the rectangles defined by rect() and inset-rect(). 
</P></DIV>
<P>For other orientations, the offsets are rotated: for 'rl-tb' and 'rl-bt', the 
<VAR>T</VAR>, <VAR>B</VAR> and <VAR>t</VAR> are measured from the right edge; 
for 'lr-tb' and 'lr-bt' they are measured from the left edge; for 'bt-lr' and 
'bt-rl' they are measured from the bottom. The other arguments are rotated 
accordingly. 
<P>The computed value of the property is the same as the specified value, i.e., 
percentages are not replaced by absolute lengths. 
<P class=note>Note that percentages are not allowed in CSS level 2. 
<P class=note>Note that there is also a <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#clip">'clip'</A></SPAN> property (see <A 
href="http://www.w3.org/TR/css3-box/#CSS3POS" rel=biblioentry>[CSS3POS]</A>). It 
is independent of <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> but only 
applies to absolutely positioned elements. 
<P class=issue>[What is the use case for this property, apart from the fact that 
its functionality was possible with 'clip' in CSS2 (but never implemented and 
not maintained in CSS&nbsp;2.1)?] 
<H2 id=the-visibility><SPAN class=secno>20. </SPAN>The visibility property</H2>
<TABLE class=propdef id=name-31>
  <TBODY>
  <TR>
    <TD><EM>Name:</EM> 
    <TD><DFN id=visibility>visibility</DFN> 
  <TR vAlign=baseline>
    <TD><EM>Value:</EM> 
    <TD>visible | hidden | collapse 
  <TR vAlign=baseline>
    <TD><EM>Initial:</EM> 
    <TD>visible 
  <TR vAlign=baseline>
    <TD><EM>Applies to:</EM> 
    <TD>all elements 
  <TR vAlign=baseline>
    <TD><EM>Inherited:</EM> 
    <TD>yes 
  <TR vAlign=baseline>
    <TD><EM>Percentages:</EM> 
    <TD>N/A 
  <TR vAlign=baseline>
    <TD><EM>Media:</EM> 
    <TD>visual 
  <TR>
    <TD><EM>Computed&nbsp;value:</EM> 
    <TD>specified value </TR></TBODY></TABLE>
<P>The <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#visibility">'visibility'</A></SPAN> 
property specifies whether the boxes generated by an element are rendered. 
Invisible boxes still affect layout. (Set the <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> property to 
<SPAN class=css>'none'</SPAN> to suppress box generation altogether). Values 
have the following meanings: 
<DL>
  <DT>visible 
  <DD>The generated box is visible. 
  <DT>hidden 
  <DD>The generated box is invisible (fully <SPAN class=index 
  id=transparent>transparent</SPAN>), but still affects layout. 
  <DT>collapse 
  <DD>Please consult the section on dynamic row and column effects [ref] in 
  tables. If used on elements other than rows or columns, <SPAN 
  class=css>'collapse'</SPAN> has the same meaning as <SPAN 
  class=css>'hidden'</SPAN>. </DD></DL>
<P class=note>Note that there is a separate property <SPAN class=property><A 
href="http://www.w3.org/TR/css3-box/#opacity">'opacity'</A></SPAN> (see the 
Color module <A href="http://www.w3.org/TR/css3-box/#CSS3COLOR" 
rel=biblioentry>[CSS3COLOR]</A>) to set the <SPAN class=index 
id=transparency>transparency</SPAN> of elements to values between fully opaque 
and fully transparent. 
<DIV class=example>
<P>In the following example, pressing either form button invokes a user-defined 
script function that causes the corresponding box to become visible and the 
other to be hidden. Since these boxes have the same size and position, the 
effect is that one replaces the other. (The script code is in a hypothetical 
script language. It may or may not have any effect in a CSS-capable UA.) <PRE>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;STYLE type="text/css"&gt;
&lt;!--
   #container1 { position: absolute; 
                 top: 2in; left: 2in; width: 2in }
   #container2 { position: absolute; 
                 top: 2in; left: 2in; width: 2in;
                 visibility: hidden; }
--&gt;
&lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;P&gt;Choose a suspect:&lt;/P&gt;
&lt;DIV id="container1"&gt;
   &lt;IMG alt="Al Capone" 
        width="100" height="100" 
        src="suspect1.jpg"&gt;
   &lt;P&gt;Name: Al Capone&lt;/P&gt;
   &lt;P&gt;Residence: Chicago&lt;/P&gt;
&lt;/DIV&gt;

&lt;DIV id="container2"&gt;
   &lt;IMG alt="Lucky Luciano" 
        width="100" height="100" 
        src="suspect2.jpg"&gt;
   &lt;P&gt;Name: Lucky Luciano&lt;/P&gt;
   &lt;P&gt;Residence: New York&lt;/P&gt;
&lt;/DIV&gt;

&lt;FORM method="post" 
      action="http://www.suspect.org/process-bums"&gt;
   &lt;P&gt;
   &lt;INPUT name="Capone" type="button" 
          value="Capone" 
          onClick='show("container1");hide("container2")'&gt;
   &lt;INPUT name="Luciano" type="button" 
          value="Luciano" 
          onClick='show("container2");hide("container1")'&gt;
&lt;/FORM&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE></DIV>
<H2 id=glossary><SPAN class=secno>21. </SPAN>Glossary</H2>
<P>When a definition below mentions the value of a property, it refers to the 
computed value <A href="http://www.w3.org/TR/css3-box/#CSS3VAL" 
rel=biblioentry>[CSS3VAL]</A>: 
<DL>
  <DT><DFN id=root-box>root box</DFN>, <DFN id=root-element>root element</DFN> 
  <DD>The box resp. element that has no parent box resp. element. The root 
  element of the source document generates the root box. 
  <DT><DFN id=positioned>positioned box</DFN>, <DFN id=positioned0>positioned 
  element</DFN> 
  <DD>A box resp. element whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property is not <SPAN class=css>'none'</SPAN> and whose <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> property 
  is either <SPAN class=css>'absolute'</SPAN> or <SPAN class=css>'fixed'</SPAN>. 
  A positioned element generates a positioned box. Note that <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> does not 
  apply to the <EM><A href="http://www.w3.org/TR/css3-box/#root-element">root 
  element</A></EM>. 
  <DT><DFN id=floating0>floating box</DFN>, <DFN id=floating1>floating 
  element</DFN> 
  <DD>A box resp. element whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property is not <SPAN class=css>'none'</SPAN>, whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> property 
  is either <SPAN class=css>'static'</SPAN> or <SPAN class=css>'relative'</SPAN> 
  and whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> property is not 
  <SPAN class=css>'none'</SPAN>. A floating element generates a floating box. 
  Note that <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> and <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> do not apply to 
  the <EM><A href="http://www.w3.org/TR/css3-box/#root-element">root 
  element</A></EM>. 
  <DT><DFN id=normal-flow>normal-flow box</DFN>, <DFN 
  id=normal-flow0>normal-flow element</DFN> 
  <DD>A box resp. element whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property is not <SPAN class=css>'none'</SPAN>, whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#position">'position'</A></SPAN> property 
  is <SPAN class=css>'static'</SPAN> or <SPAN class=css>'relative'</SPAN>, whose 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#float">'float'</A></SPAN> property is 
  <SPAN class=css>'none'</SPAN> and whose <EM><A 
  href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM> is the 
  same as its parent's. The <EM><A 
  href="http://www.w3.org/TR/css3-box/#root-box">root box</A></EM> resp. element 
  is also a normal-flow box resp. element. 
  <DT><DFN id=block-level>block-level box</DFN>, <DFN 
  id=block-level0>block-level element</DFN> 
  <DD>Informally: an element that creates a block whose width is determined by 
  its parent, not by its content. Formally: a <EM><A 
  href="http://www.w3.org/TR/css3-box/#normal-flow">normal-flow box</A></EM> 
  resp. element whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property is <SPAN class=css>'block', 'list-item', 'run-in'</SPAN> (under 
  certain conditions) or <SPAN class=css>'compact'</SPAN> (under certain 
  conditions). See the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property for when <SPAN class=css>'run-in'</SPAN> and <SPAN 
  class=css>'compact'</SPAN> are rendered as block-level boxes. 
  <DT><DFN id=inline-level>inline-level box</DFN>, <DFN 
  id=inline-level0>inline-level element</DFN> 
  <DD>Informally: an element that is rendered inside a <EM><A 
  href="http://www.w3.org/TR/css3-box/#line-box">line box</A></EM>. Formally: a 
  <EM><A href="http://www.w3.org/TR/css3-box/#normal-flow">normal-flow 
  box</A></EM> resp. element whose <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  property is <SPAN class=css>'inline', 'run-in'</SPAN> (under certain 
  conditions) or <SPAN class=css>'compact'</SPAN> (under certain conditions). 
  See the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> property 
  for when <SPAN class=css>'run-in'</SPAN> and <SPAN class=css>'compact'</SPAN> 
  are rendered as inline-level boxes. 
  <DT><DFN id=flow-root>flow root</DFN> 
  <DD>A box (or element) that is either the <EM><A 
  href="http://www.w3.org/TR/css3-box/#root-box">root box</A></EM>, a <EM><A 
  href="http://www.w3.org/TR/css3-box/#positioned">positioned box</A></EM>, a 
  <EM><A href="http://www.w3.org/TR/css3-box/#floating0">floating box</A></EM>, 
  a <EM><A href="http://www.w3.org/TR/css3-box/#block-level">block-level 
  box</A></EM> that has a different <EM><A 
  href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM> than 
  its parent, or else an <EM><A 
  href="http://www.w3.org/TR/css3-box/#inline-level">inline-level box</A></EM> 
  with <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
  set to <SPAN class=css>'block-inside'</SPAN> or a box with <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  set to <SPAN class=css>'table-cell'</SPAN> or <SPAN 
  class=css>'table-caption'</SPAN>, or any other box with <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN> set to 
  <SPAN class=css>'scroll'</SPAN> or <SPAN class=css>'auto'</SPAN>. It is called 
  a "flow root," because it is the root of a <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow">flow</A></EM>. 
  <DT><DFN id=flow>flow</DFN>, <DFN id=normal>normal flow</DFN> 
  <DD>A flow consists of a <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM> box with 
  all its children that are <SPAN title="normal-flow box"><A 
  href="http://www.w3.org/TR/css3-box/#normal-flow">normal-flow 
  boxes</A></SPAN>, plus all their children that are normal-flow boxes, etc., 
  recursively. The word "normal flow" is sometimes used as a synonym for flow. 
  <DT><DFN id=horizontal>horizontal flow</DFN> 
  <DD>A <EM><A href="http://www.w3.org/TR/css3-box/#flow">flow</A></EM> with 
  horizontal text, i.e., whose <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM> has a 
  horizontal <EM><A 
  href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM>. 
  <DT><DFN id=vertical>vertical flow</DFN> 
  <DD>A <EM><A href="http://www.w3.org/TR/css3-box/#flow">flow</A></EM> with 
  vertical text, i.e., whose <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM> has 
  vertical-rl or <SPAN lang=und><A 
  href="http://www.w3.org/TR/css3-box/#vertical-lr">vertical-lr</A></SPAN> 
  <EM><A href="http://www.w3.org/TR/css3-box/#orientation">orientation</A></EM>. 

  <DT><DFN id=orientation>orientation</DFN> 
  <DD>The orientation of an element. An element can have one of three 
  orientations: 
  <UL>
    <LI><DFN id=horizontal0>horizontal</DFN>: elements with 'writing-mode' of 
    'lr-tb' or 'rl-tb' have lines that are horizontal and are added top to 
    bottom 
    <LI><DFN id=vertical-rl>vertical-rl</DFN>: elements with 'writing-mode' of 
    'tb-rl' or 'bt-rl' have lines that are vertical and are stacked from right 
    to left 
    <LI><DFN id=vertical-lr>vertical-lr</DFN>: elements with 'writing-mode' of 
    'bt-lr' or 'tb-lr' have lines that are vertical and are added from left to 
    right </LI></UL>
  <P><DFN id=vertical0>Vertical</DFN> refers to both vertical-rl and 
  vertical-lr. 
  <P>The orientation of the <EM><A 
  href="http://www.w3.org/TR/css3-box/#containing">containing block</A></EM> of 
  the <EM><A href="http://www.w3.org/TR/css3-box/#root-element">root 
  element</A></EM> is per definition the same as that of the root element 
  itself. </P>
  <DT><DFN id=inline>inline progression direction</DFN>, <DFN id=block>block 
  progression direction</DFN> 
  <DD>The inline progression direction of an element roughly corresponds to the 
  direction in which letters follow each other, while the block progression 
  direction is the direction in which blocks follow each other. They are given 
  by the <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#writing-mode">'writing-mode'</A></SPAN> 
  property, according to this table. (See the Text module <A 
  href="http://www.w3.org/TR/css3-box/#CSS3TEXT" rel=biblioentry>[CSS3TEXT]</A> 
  for a fuller explanation.) 
  <TABLE class=equiv-table>
    <TBODY>
    <TR>
      <TH>writing-mode 
      <TH>inline progression 
      <TH>block progression 
    <TR>
      <TD>lr-tb 
      <TD>right 
      <TD>down 
    <TR>
      <TD>lr-bt 
      <TD>right 
      <TD>up 
    <TR>
      <TD>rl-tb 
      <TD>left 
      <TD>down 
    <TR>
      <TD>rl-bt 
      <TD>left 
      <TD>up 
    <TR>
      <TD>tb-rl 
      <TD>down 
      <TD>left 
    <TR>
      <TD>tb-lr 
      <TD>down 
      <TD>right 
    <TR>
      <TD>bt-rl 
      <TD>up 
      <TD>left 
    <TR>
      <TD>bt-lr 
      <TD>up 
      <TD>right </TR></TBODY></TABLE>
  <DT><DFN id=containing>containing block</DFN> (of an element) 
  <DD>The containing block of a <EM><A 
  href="http://www.w3.org/TR/css3-box/#normal-flow0">normal-flow 
  element</A></EM> or of a <EM><A 
  href="http://www.w3.org/TR/css3-box/#floating1">floating element</A></EM> is 
  the <EM><A href="http://www.w3.org/TR/css3-box/#content">content area</A></EM> 
  of the nearest ancestor that is either a <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM> or a <EM><A 
  href="http://www.w3.org/TR/css3-box/#block-level0">block-level 
  element</A></EM>. 
  <P>The containing block of the <EM><A 
  href="http://www.w3.org/TR/css3-box/#root-element">root element</A></EM> is 
  chosen by the UA, but it is suggested that UAs use the <EM>viewport</EM>. 
  <P>The containing block of a <EM><A 
  href="http://www.w3.org/TR/css3-box/#positioned0">positioned element</A></EM> 
  is the <EM><A href="http://www.w3.org/TR/css3-box/#padding0">padding 
  edge</A></EM> of the nearest ancestor that is a <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow-root">flow root</A></EM>. [Check 
  this with Position module.] 
  <P class=note>Note that if this nearest ancestor has columns, the containing 
  block is a column. See the multicolumn module[ref]. </P>
  <DT><DFN id=intrinsic>intrinsic size</DFN>, <DFN id=intrinsic0>intrinsic 
  width</DFN>, <DFN id=intrinsic1>intrinsic height</DFN> 
  <DD>
  <P>The width &amp; height that an element has "naturally," i.e., without 
  outside constraints. We don't define where the intrinsic size of <SPAN 
  title="replaced element"><A 
  href="http://www.w3.org/TR/css3-box/#replaced">replaced elements</A></SPAN> 
  comes from, but we assume there is one. (For raster images, it is typically 
  the size in pixels; for vector graphics, the design size.) All occurrences of 
  the intrinsic size of replaced elements in this specification refer to the 
  <EM>computed</EM> intrinsic size, i.e., <EM>after</EM> applying the <SPAN 
  class=property><A href="http://www.w3.org/TR/css3-box/#crop">'crop'</A></SPAN> 
  property to it, unless explicitly stated otherwise. 
  <P>The intrinsic width of a non-replaced element in a horizontal <EM><A 
  href="http://www.w3.org/TR/css3-box/#flow">flow</A></EM> is found as follows: 
  set <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> to <SPAN 
  class=css>'block'</SPAN> and find the minimum width such that increasing the 
  width (1) does not lead to a different number of line breaks and (2) does not 
  decrease the number of child elements that overflow (see <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#overflow0">'overflow'</A></SPAN>). The 
  intrinsic height is the box's height at that width. Vertical flow is 
  analogous, but find the minimum height and the corresponding width. The 
  intrinsic size of elements with a <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> value that 
  is not defined by this specification should be defined in the specification 
  that defined that value. 
  <P>The intrinsic size of non-replaced elements is used, e.g., to determine 
  when a 'compact' element is rendered as a block, or what the optimal size of a 
  table is. </P>
  <DT><DFN id=minimum>minimum intrinsic size</DFN>, <DFN id=minimum0>minimum 
  intrinsic width</DFN>, <DFN id=minimum1>minimum intrinsic height</DFN> 
  <DD class=issue>[The width of floats, abs. pos. elts. and table cells is 
  min(intrinsic width, max(minimum intrinsic width, available width)). Need a 
  definition for minimum intrinsic size here...] 
  <DT><DFN id=link-element>link element</DFN> 
  <DD>An element that is the source anchor of a link. See the '<CODE><SPAN 
  class=css>@link</SPAN></CODE>' rule and the <SPAN 
  class=property>'collapse'</SPAN> property. 
  <DT><DFN id=replaced>replaced element</DFN> 
  <DD>A <EM><A href="http://www.w3.org/TR/css3-box/#link-element">link 
  element</A></EM> whose <SPAN class=property>'content'</SPAN> property is <SPAN 
  class=css>'link'</SPAN>. (Informally: an element whose content is not rendered 
  by the box model of this chapter. The prime example is an image, i.e., a link 
  in the source document that is replaced by the image that it points to; hence 
  the name.) 
  <DT><DFN id=line-box>line box</DFN> 
  <DD>Sequences of <SPAN title="inline-level element"><A 
  href="http://www.w3.org/TR/css3-box/#inline-level0">inline-level 
  elements</A></SPAN> are laid out one after the other, aligned on their 
  baselines and broken over several lines according to the rules for line 
  breaking and text alignment. Each resulting line is wrapped in a box that is 
  called the line box and whose height is determined from the various <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#line-height">'line-height'</A></SPAN> and 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#line-box-contain">'line-box-contain'</A></SPAN> 
  properties of each of the boxes on the line. Line boxes are then stacked 
  together with no intervening margins to form the content of a block-level box. 
  See the Line box model <A href="http://www.w3.org/TR/css3-box/#CSS3LINE" 
  rel=biblioentry>[CSS3LINE]</A>. 
  <DT><DFN id=nominal>nominal font</DFN> (of an element) 
  <DD>The first font in the list of fonts of the 'font' property for which the 
  UA can determine the position of the element's dominant baseline (see <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#dominant-baseline">'dominant-baseline'</A></SPAN>) 
  in the font's em-box. 
  <P class=note>Note that this usually means that the UA actually has that font. 
  Note also that the nominal font need never actually appear, e.g., if the 
  element has no textual content. </P>
  <DT><DFN id=anonymous>anonymous inline element</DFN> 
  <DD>If an element with a <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-model">'display-model'</A></SPAN> 
  of <SPAN class=css>'block-inside'</SPAN> contains text (that is not inside a 
  child element and that is not white space that can be collapsed), all 
  uninterrupted sequences of such text are anonymous inline elements. 
  "Anonymous" means more than "no name": it means the elements cannot be 
  selected, not even with the universal selector (*), and thus all their 
  properties are either inherited or set to their initial values. In particular 
  <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display">'display'</A></SPAN> is set to 
  <SPAN class=css>'inline'</SPAN>. 
  <DT><DFN id=anonymous0>anonymous block element</DFN> 
  <DD>If an element has child elements with a <SPAN class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  of <SPAN class=css>'inline'</SPAN> as well as child elements with other <SPAN 
  class=property><A 
  href="http://www.w3.org/TR/css3-box/#display-role">'display-role'</A></SPAN> 
  values (except <SPAN class=css>'none'</SPAN>), then every sequence of elements 
  with <SPAN class=css>'inline'</SPAN> (including <EM 
  title="anonymous inline&#10;element"><A 
  href="http://www.w3.org/TR/css3-box/#anonymous">anonymous inline 
  elements</A></EM>) is considered to be contained inside an anonymous block 
  element. Such elements do not affect the matching of selectors and they 
  themselves cannot be selected, but they help to explain the box model. <SPAN 
  class=issue>[Actually, it doesn't, since this gloss is not referenced 
  anywhere. Check whether it can be removed.]</SPAN> </DD></DL>
<DIV class=example>
<P>Here is an example of <EM><SPAN title="anonymous inline element"><A 
href="http://www.w3.org/TR/css3-box/#anonymous">anonymous inline 
elements</A></SPAN></EM>. <PRE>&lt;P&gt;<STRONG>This is a</STRONG> &lt;EM&gt;short&lt;/EM&gt; <STRONG>paragraph</STRONG>&lt;/P&gt;</PRE>
<P>Assume that <CODE><SPAN class=html>P</SPAN></CODE> has <SPAN 
class=css>'display: block'</SPAN> (which implies <SPAN class=css>'display-model: 
flow'</SPAN>) and that <CODE class=html>EM</CODE> has 'display: inline' 
(implying <SPAN class=css>'display-model: inline'</SPAN>), then the two texts 
"This is a" and "paragraph" are anonymous inline elements. The text "short" is 
not an anonymous inline element, because the <CODE class=html>EM</CODE> itself 
is already inline. </P></DIV>
<P>
<H2 id=profiles><SPAN class=secno>22. </SPAN>Profiles</H2>
<P>There are 3 modules defined by this chapter: 
<OL>
  <LI>CSS1 box model: horizontal text, floats 
  <LI>CSS2 box model: CSS1 plus run-in 
  <LI>CSS3 box model: CSS2 plus vertical </LI></OL>
<P>The 3 modules consist of the following properties/values: 
<TABLE border=1>
  <TBODY>
  <TR>
    <TD>CSS1 box model 
    <TD>
      <UL>
        <LI>width, height 
        <LI>border properties, margin properties, padding properties 
        <LI>float (left, right, none), clear (left, right, both, none) 
        <LI>[...] </LI></UL>
  <TR>
    <TD>CSS2 box model 
    <TD>CSS1 box model, plus: 
      <UL>
        <LI>min-width, max-width, min-height, max-height 
        <LI>[...] </LI></UL>
  <TR>
    <TD>CSS3 box model 
    <TD>CSS2 box model plus: 
      <UL>
        <LI>box-sizing 
        <LI>float (top, bottom, inside, outside), clear (top, bottom, inside, 
        outside) 
        <LI>[...] </LI></UL></TR></TBODY></TABLE>
<H2 id=conformance><SPAN class=secno>23. </SPAN>Conformance</H2>
<P>[...] 
<H2 class=no-num id=acknowledgments>Acknowledgments</H2>
<P>[acknowledgments. David Baron, Ian Hickson] 
<P>David Baron discovered that the assumption about whether a scrolling 
mechanism is needed can influence whether it is indeed needed or not. See the <A 
href="http://www.w3.org/TR/css3-box/#collapse-scroll">explanation</A> under <A 
href="http://www.w3.org/TR/css3-box/#overflow">"The overflow property"</A>. 
<P>Many people on the www-style@w3.org mailing list provided valuable reviews, 
corrections and proposals. Among them, Björn Höhrmann deserves special mention. 
<P>[Comments: 
<UL>
  <LI><A 
  href="http://lists.w3.org/Archives/Public/www-style/2001Jul/0167.html">Björn 
  Höhrmann</A> 
  <LI><A 
  href="http://lists.w3.org/Archives/Public/www-style/2001Jul/0169.html">Jeffrey 
  Yasskin</A> 
  <LI><A 
  href="http://lists.w3.org/Archives/Public/www-style/2001Sep/0041.html">Valerie 
  G. Sharp</A> </LI></UL>
<P>] 
<H2 class=no-num id=references>References</H2>
<H3 class=no-num id=normative>Normative references</H3><!-- begin-normative --><!-- Sorted by label -->
<DL class=bibliography>
  <DT style="DISPLAY: none"><!-- keeps the doc valid if the DL is empty --><!---->
  <DT id=CSS3LINE>[CSS3LINE] 
  <DD>Eric A. Meyer. <CITE>CSS3 module: linebox model.</CITE> (forthcoming). W3C 
  working draft. (Work in progress.) <!---->
  <DT id=CSS3SYN>[CSS3SYN] 
  <DD>David Baron. <CITE>CSS3 module: syntax.</CITE> (forthcoming). W3C working 
  draft. (Work in progress.) <!---->
  <DT id=CSS3TEXT>[CSS3TEXT] 
  <DD>Michel Suignard; Chris Lilley (eds). <CITE>CSS3 module: text.</CITE> 17 
  May 2001. W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2001/WD-css3-text-20010517">http://www.w3.org/TR/2001/WD-css3-text-20010517</A> 
<!---->
  <DT id=CSS3VAL>[CSS3VAL] 
  <DD>Håkon Wium Lie. <CITE>CSS3 module: values and units.</CITE> (forthcoming). 
  W3C working draft. (Work in progress.) <!----></DD></DL><!-- end-normative -->
<H3 class=no-num id=other>Other references</H3><!-- begin-informative --><!-- Sorted by label -->
<DL class=bibliography>
  <DT style="DISPLAY: none"><!-- keeps the doc valid if the DL is empty --><!---->
  <DT id=CSS3BG>[CSS3BG] 
  <DD>Tim Boland; Bert Bos. <CITE>CSS3 module: backgrounds.</CITE> 19 February 
  2002. W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2002/WD-css3-background-20020219">http://www.w3.org/TR/2002/WD-css3-background-20020219</A> 
<!---->
  <DT id=CSS3BORDER>[CSS3BORDER] 
  <DD>Tapas Roy. <CITE>CSS3 module: Border.</CITE> (unpublished). W3C Working 
  Draft. (Work in progress.) <!---->
  <DT id=CSS3COL>[CSS3COL] 
  <DD>Håkon Wium Lie. <CITE>CSS3 module: Multi-column layout.</CITE> 18 Jan 
  2001. W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2001/WD-css3-multicol-20010118">http://www.w3.org/TR/2001/WD-css3-multicol-20010118</A> 
<!---->
  <DT id=CSS3COLOR>[CSS3COLOR] 
  <DD>Tantek Çelik; Chris Lilley. <CITE>CSS3 module: color.</CITE> 5 March 2001. 
  W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2001/WD-css3-color-20010305">http://www.w3.org/TR/2001/WD-css3-color-20010305</A> 
<!---->
  <DT id=CSS3FONT>[CSS3FONT] 
  <DD>Michel Suignard; Chris Lilley. <CITE>CSS3 module: fonts.</CITE> 31 July 
  2001. W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2001/WD-css3-fonts-20010731">http://www.w3.org/TR/2001/WD-css3-fonts-20010731</A> 
<!---->
  <DT id=CSS3GENCON>[CSS3GENCON] 
  <DD>Håkon Wium Lie; Ian Hickson. <CITE>CSS3 module: generated text.</CITE> 
  (forthcoming). W3C working draft. (Work in progress.) <!---->
  <DT id=CSS3LIST>[CSS3LIST] 
  <DD>Tantek Çelik; Ian Hickson. <CITE>CSS3 module: lists.</CITE> 20 Feb 2002. 
  W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2002/WD-css3-lists-20020220">http://www.w3.org/TR/2002/WD-css3-lists-20020220</A> 
<!---->
  <DT id=CSS3PAGE>[CSS3PAGE] 
  <DD>Robert Stevahn. <CITE>CSS3 module: paged media.</CITE> 28 Sep 1999. W3C 
  working draft. (Work in progress) URL: <A 
  href="http://www.w3.org/TR/1999/WD-css3-page-19990928">http://www.w3.org/TR/1999/WD-css3-page-19990928</A> 
<!---->
  <DT id=CSS3POS>[CSS3POS] 
  <DD>Bert Bos. <CITE>CSS3 module: absolute positioning.</CITE> (forthcoming). 
  W3C working draft. (Work in progress.) <!---->
  <DT id=CSS3RUBY>[CSS3RUBY] 
  <DD>Michel Suignard. <CITE>CSS3 module: Ruby.</CITE> 16 Feb 2001. W3C working 
  draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/2001/WD-css3-ruby-20010216">http://www.w3.org/TR/2001/WD-css3-ruby-20010216</A> 
<!---->
  <DT id=CSS3TBL>[CSS3TBL] 
  <DD>Bert Bos; Pierre Saslawsky. <CITE>CSS3 module: tables.</CITE> 
  (forthcoming). W3C working draft. (Work in progress.) <!---->
  <DT id=CSS3UI>[CSS3UI] 
  <DD>Tantek Çelik. <CITE>CSS3 module: basic user interface.</CITE> 
  (forthcoming). W3C working draft. (Work in progress.) URL: <A 
  href="http://www.w3.org/TR/css3-ui">http://www.w3.org/TR/css3-ui</A> <!---->
  <DT id=SELECT>[SELECT] 
  <DD>Daniel Glazman; Tantek Çelik; Ian Hickson; et al. <CITE>Selectors.</CITE> 
  13 Nov 2001. W3C Candidate Recommendation. URL: <A 
  href="http://www.w3.org/TR/2001/CR-css3-selectors-20011113">http://www.w3.org/TR/2001/CR-css3-selectors-20011113</A> 
<!---->
  <DT id=SMIL10>[SMIL10] 
  <DD>Various. <CITE>Synchronized Multimedia Integration Language (SMIL) 1.0 
  Specification.</CITE> Jun 1998. W3C Recommendation. URL: <A 
  href="http://www.w3.org/TR/1998/REC-smil-19980615">http://www.w3.org/TR/1998/REC-smil-19980615</A> 
<!---->
  <DT id=SVG10>[SVG10] 
  <DD>Various. <CITE>Scalable Vector Graphics (SVG) 1.0 Specification.</CITE> 
  Sep 2001. W3C Recommendation. URL: <A 
  href="http://www.w3.org/TR/2001/REC-SVG-20010904">http://www.w3.org/TR/2001/REC-SVG-20010904</A> 
<!----></DD></DL><!-- end-informative -->
<H2 class=no-num id=index>Index</H2><!--begin-index-->
<UL class=indexlist>
  <LI>anonymous block element, <A 
  href="http://www.w3.org/TR/css3-box/#anonymous0"><STRONG>#</STRONG></A> 
  <LI>anonymous inline element, <A 
  href="http://www.w3.org/TR/css3-box/#anonymous"><STRONG>#</STRONG></A> 
  <LI>'background', <A 
  href="http://www.w3.org/TR/css3-box/#background"><STRONG>#</STRONG></A> 
  <LI>'background-position', <A 
  href="http://www.w3.org/TR/css3-box/#background-position"><STRONG>#</STRONG></A> 

  <LI>block-level box, <A 
  href="http://www.w3.org/TR/css3-box/#block-level"><STRONG>#</STRONG></A> 
  <LI>block-level element, <A 
  href="http://www.w3.org/TR/css3-box/#block-level0"><STRONG>#</STRONG></A> 
  <LI>block progression direction, <A 
  href="http://www.w3.org/TR/css3-box/#block"><STRONG>#</STRONG></A> 
  <LI>border area, <A 
  href="http://www.w3.org/TR/css3-box/#border"><STRONG>#</STRONG></A> 
  <LI>border-bottom-width, <A 
  href="http://www.w3.org/TR/css3-box/#border-bottom-width"><STRONG>#</STRONG></A> 

  <LI>border edge, <A 
  href="http://www.w3.org/TR/css3-box/#border0"><STRONG>#</STRONG></A> 
  <LI>border-left-width, <A 
  href="http://www.w3.org/TR/css3-box/#border-left-width"><STRONG>#</STRONG></A> 

  <LI>border-right-width, <A 
  href="http://www.w3.org/TR/css3-box/#border-right-width"><STRONG>#</STRONG></A> 

  <LI>border-top-width, <A 
  href="http://www.w3.org/TR/css3-box/#border-top-width"><STRONG>#</STRONG></A> 
  <LI>'border-top-width', <A 
  href="http://www.w3.org/TR/css3-box/#border-top-width0"><STRONG>#</STRONG></A> 

  <LI>border-width, <A 
  href="http://www.w3.org/TR/css3-box/#border-width"><STRONG>#</STRONG></A> 
  <LI>box-height, <A 
  href="http://www.w3.org/TR/css3-box/#box-height"><STRONG>#</STRONG></A> 
  <LI>box-sizing, <A 
  href="http://www.w3.org/TR/css3-box/#box-sizing"><STRONG>#</STRONG></A> 
  <LI>box-width, <A 
  href="http://www.w3.org/TR/css3-box/#box-width"><STRONG>#</STRONG></A> 
  <LI>clear, <A 
  href="http://www.w3.org/TR/css3-box/#clear"><STRONG>#</STRONG></A> 
  <LI>clear-after, <A 
  href="http://www.w3.org/TR/css3-box/#clear-after"><STRONG>#</STRONG></A> 
  <LI>'clip', <A 
  href="http://www.w3.org/TR/css3-box/#clip"><STRONG>#</STRONG></A> 
  <LI>collapsing margins, <A 
  href="http://www.w3.org/TR/css3-box/#collapse"><STRONG>#</STRONG></A> 
  <LI>containing block, <A 
  href="http://www.w3.org/TR/css3-box/#containing"><STRONG>#</STRONG></A> 
  <LI>content area, <A 
  href="http://www.w3.org/TR/css3-box/#content"><STRONG>#</STRONG></A> 
  <LI>content edge, <A 
  href="http://www.w3.org/TR/css3-box/#content0"><STRONG>#</STRONG></A> 
  <LI>crop, <A href="http://www.w3.org/TR/css3-box/#crop"><STRONG>#</STRONG></A> 

  <LI>'direction', <A 
  href="http://www.w3.org/TR/css3-box/#direction"><STRONG>#</STRONG></A> 
  <LI>display, <A 
  href="http://www.w3.org/TR/css3-box/#display"><STRONG>#</STRONG></A> 
  <LI>display-model, <A 
  href="http://www.w3.org/TR/css3-box/#display-model"><STRONG>#</STRONG></A> 
  <LI>display-role, <A 
  href="http://www.w3.org/TR/css3-box/#display-role"><STRONG>#</STRONG></A> 
  <LI>'dominant-baseline', <A 
  href="http://www.w3.org/TR/css3-box/#dominant-baseline"><STRONG>#</STRONG></A> 

  <LI>fit, <A href="http://www.w3.org/TR/css3-box/#fit"><STRONG>#</STRONG></A> 
  <LI>fit-position, <A 
  href="http://www.w3.org/TR/css3-box/#fit-position"><STRONG>#</STRONG></A> 
  <LI>float, <A 
  href="http://www.w3.org/TR/css3-box/#float"><STRONG>#</STRONG></A> 
  <LI>float-displace, <A 
  href="http://www.w3.org/TR/css3-box/#float-displace"><STRONG>#</STRONG></A> 
  <LI>floating box, <A 
  href="http://www.w3.org/TR/css3-box/#floating0"><STRONG>#</STRONG></A> 
  <LI>floating element, <A 
  href="http://www.w3.org/TR/css3-box/#floating1"><STRONG>#</STRONG></A> 
  <LI>float rules, <A 
  href="http://www.w3.org/TR/css3-box/#here-are"><STRONG>#</STRONG></A> 
  <LI>flow, <A href="http://www.w3.org/TR/css3-box/#flow"><STRONG>#</STRONG></A> 

  <LI>flow root, <A 
  href="http://www.w3.org/TR/css3-box/#flow-root"><STRONG>#</STRONG></A> 
  <LI>'font-size', <A 
  href="http://www.w3.org/TR/css3-box/#font-size"><STRONG>#</STRONG></A> 
  <LI>height, <A 
  href="http://www.w3.org/TR/css3-box/#height"><STRONG>#</STRONG></A> 
  <LI>horizontal, <A 
  href="http://www.w3.org/TR/css3-box/#horizontal0"><STRONG>#</STRONG></A> 
  <LI>horizontal flow, <A 
  href="http://www.w3.org/TR/css3-box/#horizontal"><STRONG>#</STRONG></A> 
  <LI>'icon', <A 
  href="http://www.w3.org/TR/css3-box/#icon"><STRONG>#</STRONG></A> 
  <LI>indent-edge-reset, <A 
  href="http://www.w3.org/TR/css3-box/#indent-edge-reset"><STRONG>#</STRONG></A> 

  <LI>inline-level box, <A 
  href="http://www.w3.org/TR/css3-box/#inline-level"><STRONG>#</STRONG></A> 
  <LI>inline-level element, <A 
  href="http://www.w3.org/TR/css3-box/#inline-level0"><STRONG>#</STRONG></A> 
  <LI>inline progression direction, <A 
  href="http://www.w3.org/TR/css3-box/#inline"><STRONG>#</STRONG></A> 
  <LI>intrinsic height, <A 
  href="http://www.w3.org/TR/css3-box/#intrinsic1"><STRONG>#</STRONG></A> 
  <LI>intrinsic size, <A 
  href="http://www.w3.org/TR/css3-box/#intrinsic"><STRONG>#</STRONG></A> 
  <LI>intrinsic width, <A 
  href="http://www.w3.org/TR/css3-box/#intrinsic0"><STRONG>#</STRONG></A> 
  <LI>line box, <A 
  href="http://www.w3.org/TR/css3-box/#line-box"><STRONG>#</STRONG></A> 
  <LI>line-box, <A href="http://www.w3.org/TR/css3-box/#line-box0">#</A> 
  <LI>'line-box-contain', <A 
  href="http://www.w3.org/TR/css3-box/#line-box-contain"><STRONG>#</STRONG></A> 
  <LI>'line-height', <A 
  href="http://www.w3.org/TR/css3-box/#line-height"><STRONG>#</STRONG></A> 
  <LI>link element, <A 
  href="http://www.w3.org/TR/css3-box/#link-element"><STRONG>#</STRONG></A> 
  <LI>'list-style', <A 
  href="http://www.w3.org/TR/css3-box/#list-style"><STRONG>#</STRONG></A> 
  <LI>margin, <A 
  href="http://www.w3.org/TR/css3-box/#margin1"><STRONG>#</STRONG></A> 
  <LI>margin area, <A 
  href="http://www.w3.org/TR/css3-box/#margin"><STRONG>#</STRONG></A> 
  <LI>margin-bottom, <A 
  href="http://www.w3.org/TR/css3-box/#margin-bottom"><STRONG>#</STRONG></A> 
  <LI>margin edge, <A 
  href="http://www.w3.org/TR/css3-box/#margin0"><STRONG>#</STRONG></A> 
  <LI>margin-left, <A 
  href="http://www.w3.org/TR/css3-box/#margin-left"><STRONG>#</STRONG></A> 
  <LI>margin-right, <A 
  href="http://www.w3.org/TR/css3-box/#margin-right"><STRONG>#</STRONG></A> 
  <LI>margin-top, <A 
  href="http://www.w3.org/TR/css3-box/#margin-top"><STRONG>#</STRONG></A> 
  <LI>marquee, <A 
  href="http://www.w3.org/TR/css3-box/#marquee0"><STRONG>#</STRONG></A> 
  <LI>marquee-direction, <A 
  href="http://www.w3.org/TR/css3-box/#marquee-direction"><STRONG>#</STRONG></A> 

  <LI>marquee-repetition, <A 
  href="http://www.w3.org/TR/css3-box/#marquee-repetition"><STRONG>#</STRONG></A> 

  <LI>marquee-speed, <A 
  href="http://www.w3.org/TR/css3-box/#marquee-speed"><STRONG>#</STRONG></A> 
  <LI>marquee-style, <A 
  href="http://www.w3.org/TR/css3-box/#marquee-style"><STRONG>#</STRONG></A> 
  <LI>max-height, <A 
  href="http://www.w3.org/TR/css3-box/#max-height"><STRONG>#</STRONG></A> 
  <LI>max-width, <A 
  href="http://www.w3.org/TR/css3-box/#max-width"><STRONG>#</STRONG></A> 
  <LI>min-height, <A 
  href="http://www.w3.org/TR/css3-box/#min-height"><STRONG>#</STRONG></A> 
  <LI>minimum intrinsic height, <A 
  href="http://www.w3.org/TR/css3-box/#minimum1"><STRONG>#</STRONG></A> 
  <LI>minimum intrinsic size, <A 
  href="http://www.w3.org/TR/css3-box/#minimum"><STRONG>#</STRONG></A> 
  <LI>minimum intrinsic width, <A 
  href="http://www.w3.org/TR/css3-box/#minimum0"><STRONG>#</STRONG></A> 
  <LI>min-width, <A 
  href="http://www.w3.org/TR/css3-box/#min-width"><STRONG>#</STRONG></A> 
  <LI>nominal font, <A 
  href="http://www.w3.org/TR/css3-box/#nominal"><STRONG>#</STRONG></A> 
  <LI>normal flow, <A 
  href="http://www.w3.org/TR/css3-box/#normal"><STRONG>#</STRONG></A> 
  <LI>normal-flow box, <A 
  href="http://www.w3.org/TR/css3-box/#normal-flow"><STRONG>#</STRONG></A> 
  <LI>normal-flow element, <A 
  href="http://www.w3.org/TR/css3-box/#normal-flow0"><STRONG>#</STRONG></A> 
  <LI>'opacity', <A 
  href="http://www.w3.org/TR/css3-box/#opacity"><STRONG>#</STRONG></A> 
  <LI>orientation, <A 
  href="http://www.w3.org/TR/css3-box/#orientation"><STRONG>#</STRONG></A>, <A 
  href="http://www.w3.org/TR/css3-box/#orientations"><STRONG>#</STRONG></A> 
  <LI>overflow, <A 
  href="http://www.w3.org/TR/css3-box/#overflow0"><STRONG>#</STRONG></A> 
  <LI>overflow-clip, <A 
  href="http://www.w3.org/TR/css3-box/#overflow-clip"><STRONG>#</STRONG></A> 
  <LI>overflow-x, <A 
  href="http://www.w3.org/TR/css3-box/#overflow-x"><STRONG>#</STRONG></A> 
  <LI>overflow-y, <A 
  href="http://www.w3.org/TR/css3-box/#overflow-y"><STRONG>#</STRONG></A> 
  <LI>padding, <A 
  href="http://www.w3.org/TR/css3-box/#padding1"><STRONG>#</STRONG></A> 
  <LI>padding area, <A 
  href="http://www.w3.org/TR/css3-box/#padding"><STRONG>#</STRONG></A> 
  <LI>padding-bottom, <A 
  href="http://www.w3.org/TR/css3-box/#padding-bottom"><STRONG>#</STRONG></A> 
  <LI>padding edge, <A 
  href="http://www.w3.org/TR/css3-box/#padding0"><STRONG>#</STRONG></A> 
  <LI>padding-left, <A 
  href="http://www.w3.org/TR/css3-box/#padding-left"><STRONG>#</STRONG></A> 
  <LI>padding-right, <A 
  href="http://www.w3.org/TR/css3-box/#padding-right"><STRONG>#</STRONG></A> 
  <LI>padding-top, <A 
  href="http://www.w3.org/TR/css3-box/#padding-top"><STRONG>#</STRONG></A> 
  <LI>'position', <A 
  href="http://www.w3.org/TR/css3-box/#position"><STRONG>#</STRONG></A> 
  <LI>positioned box, <A 
  href="http://www.w3.org/TR/css3-box/#positioned"><STRONG>#</STRONG></A> 
  <LI>positioned element, <A 
  href="http://www.w3.org/TR/css3-box/#positioned0"><STRONG>#</STRONG></A> 
  <LI>'quotes', <A 
  href="http://www.w3.org/TR/css3-box/#quotes"><STRONG>#</STRONG></A> 
  <LI>reference indent edge, <A 
  href="http://www.w3.org/TR/css3-box/#reference"><STRONG>#</STRONG></A> 
  <LI>replaced element, <A 
  href="http://www.w3.org/TR/css3-box/#replaced"><STRONG>#</STRONG></A> 
  <LI>root box, <A 
  href="http://www.w3.org/TR/css3-box/#root-box"><STRONG>#</STRONG></A> 
  <LI>root element, <A 
  href="http://www.w3.org/TR/css3-box/#root-element"><STRONG>#</STRONG></A> 
  <LI>"shrink-wrapped", <A 
  href="http://www.w3.org/TR/css3-box/#shrink-wrapped"><STRONG>#</STRONG></A> 
  <LI>'size', <A 
  href="http://www.w3.org/TR/css3-box/#size"><STRONG>#</STRONG></A> 
  <LI>'text-indent', <A 
  href="http://www.w3.org/TR/css3-box/#text-indent"><STRONG>#</STRONG></A> 
  <LI>'text-overflow', <A 
  href="http://www.w3.org/TR/css3-box/#text-overflow"><STRONG>#</STRONG></A> 
  <LI>transparency, <A href="http://www.w3.org/TR/css3-box/#transparency">#</A> 
  <LI>transparent, <A href="http://www.w3.org/TR/css3-box/#transparent">#</A> 
  <LI>Vertical, <A 
  href="http://www.w3.org/TR/css3-box/#vertical0"><STRONG>#</STRONG></A> 
  <LI>vertical flow, <A 
  href="http://www.w3.org/TR/css3-box/#vertical"><STRONG>#</STRONG></A> 
  <LI>vertical-lr, <A 
  href="http://www.w3.org/TR/css3-box/#vertical-lr"><STRONG>#</STRONG></A> 
  <LI>vertical-rl, <A 
  href="http://www.w3.org/TR/css3-box/#vertical-rl"><STRONG>#</STRONG></A> 
  <LI>visibility, <A 
  href="http://www.w3.org/TR/css3-box/#visibility"><STRONG>#</STRONG></A> 
  <LI>width, <A 
  href="http://www.w3.org/TR/css3-box/#width"><STRONG>#</STRONG></A> 
  <LI>'writing-mode', <A 
  href="http://www.w3.org/TR/css3-box/#writing-mode"><STRONG>#</STRONG></A> 
</LI></UL><!--end-index-->
<H2 class=no-num id=property>Property index</H2><!--begin properties-->
<TABLE class=proptable>
  <THEAD>
  <TR>
    <TH>Property 
    <TH>Values 
    <TH>Initial 
    <TH>Applies&nbsp;to 
    <TH>Inh. 
    <TH>Percentages 
    <TH>Media </TR>
  <TBODY>
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#border-top-width0">border-top-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#border-right-width">border-right-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#border-bottom-width">border-bottom-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#border-left-width">border-left-width</A></SPAN> 

    <TD>&lt;length&gt; | &lt;percentage&gt; | thin | medium | thick 
    <TD>medium 
    <TD>all elements 
    <TD>no 
    <TD>width* of containing block 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#border-width">border-width</A></SPAN> 

    <TD>&lt;border-width&gt;{1,4} 
    <TD>(see individual properties) 
    <TD>all elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#box-sizing">box-sizing</A></SPAN> 
    <TD>content-box | border-box 
    <TD>content 
    <TD>elements to which 'width' or 'height' applies 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#box-width">box-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#box-height">box-height</A></SPAN> 
    <TD>&lt;length&gt; | &lt;percentage&gt; | auto 
    <TD>auto 
    <TD>same as 'width' and 'height' 
    <TD>no 
    <TD>see 'width' and 'height' 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#clear">clear</A></SPAN> 
    <TD>none | [ left | right | top | bottom | inside | outside | start | end 
      | both | after]+ 
    <TD>none 
    <TD>block-level elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#clear">clear</A></SPAN> 
    <TD>none | left | right | top | bottom | inside | outside | start | end | 
      both 
    <TD>none 
    <TD>block-level elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#clear-after">clear-after</A></SPAN> 
    <TD>none | left | right | top | bottom | inside | outside | start | end | 
      both 
    <TD>none 
    <TD>block-level elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#crop">crop</A></SPAN> 
    <TD>&lt;shape&gt; | none 
    <TD>auto 
    <TD>replaced elements 
    <TD>no 
    <TD>relative to intrinsic size 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#display">display</A></SPAN> 
    <TD>inline | block | inline-block | list-item | run-in | compact | | table 
      | inline-table | table-row-group | table-header-group | table-footer-group 
      | table-row | table-column-group | table-column | table-cell | 
      table-caption | ruby | ruby-base | ruby-text | ruby-base-group | 
      ruby-text-group | none 
    <TD>inline 
    <TD>all elements 
    <TD>no 
    <TD>N/A 
    <TD>visual ('none' applies to all) 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#display-model">display-model</A></SPAN> 

    <TD>inline-inside | block-inside | table | ruby 
    <TD>text 
    <TD>all elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#display-role">display-role</A></SPAN> 

    <TD>none | block | inline | list-item | run-in | compact | table-row | 
      table-cell | table-row-group | table-header-group | table-footer-group | 
      table-column | table-column-group | table-caption | ruby-text | ruby-base 
      | ruby-base-group | ruby-text-group 
    <TD>inline 
    <TD>all elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#fit">fit</A></SPAN> 
    <TD>fill | none | meet | slice 
    <TD>fill 
    <TD>replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#fit-position">fit-position</A></SPAN> 

    <TD>[ [&lt;percentage&gt; | &lt;length&gt; ]{1,2} | [ [top | center | 
      bottom] || [left | center | right] ] ] | auto 
    <TD>0% 0% 
    <TD>replaced elements 
    <TD>yes 
    <TD>refer to width and height of box itself 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#float">float</A></SPAN> 
    <TD>left | right | top | bottom | inside | outside | start | end | none 
    <TD>none 
    <TD>all but positioned elements, generated content, and the root element 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#float-displace">float-displace</A></SPAN> 

    <TD>line | indent | block | block-within-page 
    <TD>line 
    <TD>all block-level elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#indent-edge-reset">indent-edge-reset</A></SPAN> 

    <TD>none | margin-edge | border-edge | padding-edge | content-edge | 
      inherit 
    <TD>none 
    <TD>all elements with a block-level inner formatting context. 
    <TD>no 
    <TD>n/a 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#margin1">margin</A></SPAN> 
    <TD>[ &lt;length&gt; | &lt;percentage&gt; | auto ]{1,4} 
    <TD>(see individual properties) 
    <TD>all elements 
    <TD>no 
    <TD>width* of containing block 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#margin-top">margin-top </A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#margin-right">margin-right</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#margin-bottom">margin-bottom</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#margin-left">margin-left</A></SPAN> 
    <TD>&lt;length&gt; | &lt;percentage&gt; | auto 
    <TD>0 
    <TD>all elements 
    <TD>no 
    <TD>width* of containing block 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#marquee0">marquee</A></SPAN> 
    <TD>&lt;'marquee-style'&gt; || &lt;'marquee-direction'&gt; || 
      &lt;'marquee-speed'&gt; || &lt;'marquee-repetition'&gt; 
    <TD>(see individual properties) 
    <TD>block-level and replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#marquee-direction">marquee-direction</A></SPAN> 

    <TD>forwards | backwards | ahead | reverse | left | right | up | down | 
      auto 
    <TD>auto 
    <TD>block-level and replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#marquee-repetition">marquee-repetition</A></SPAN> 

    <TD>&lt;integer&gt; | infinite 
    <TD>infinite 
    <TD>block-level and replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#marquee-speed">marquee-speed</A></SPAN> 

    <TD>slow | normal | fast | &lt;length&gt; [ / &lt;time&gt; ]? 
    <TD>normal 
    <TD>block-level and replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#marquee-style">marquee-style</A></SPAN> 

    <TD>none | slide | scroll | alternate 
    <TD>alternate 
    <TD>block-level and replaced elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#max-width">max-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#max-height">max-height</A></SPAN> 
    <TD>&lt;length&gt; | &lt;percentage&gt; | auto | inherit 
    <TD>auto 
    <TD>same as 'width' and 'height' 
    <TD>no 
    <TD>see 'width' and 'height' 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#min-width">min-width</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#min-height">min-height</A></SPAN> 
    <TD>&lt;length&gt; | &lt;percentage&gt; 
    <TD>0 
    <TD>same as 'width' and 'height' 
    <TD>no 
    <TD>see 'width' and 'height' 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#overflow0">overflow</A></SPAN> 
    <TD>visible | hidden | scroll | auto 
    <TD>visible 
    <TD>block-level and replaced elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#overflow-clip">overflow-clip</A></SPAN> 

    <TD>auto | rect(...) | inset-rect(...) 
    <TD>auto 
    <TD>block-level and replaced elements 
    <TD>no 
    <TD>width and height, see text 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#overflow-x">overflow-x</A></SPAN> 
    <TD>visible | hidden | scroll | auto | inherit 
    <TD>visible 
    <TD>block-level and replaced elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#overflow-y">overflow-y</A></SPAN> 
    <TD>visible | hidden | scroll | auto | inherit 
    <TD>visible 
    <TD>block-level and replaced elements 
    <TD>no 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#padding1">padding</A></SPAN> 
    <TD>[ &lt;length&gt; | &lt;percentage&gt; ]{1,4} 
    <TD>(see individual properties) 
    <TD>all elements 
    <TD>no 
    <TD>width* of containing block 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#padding-top">padding-top </A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#padding-right">padding-right</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#padding-bottom">padding-bottom</A></SPAN>, 
      <SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#padding-left">padding-left</A></SPAN> 

    <TD>[ &lt;length&gt; | &lt;percentage&gt; ] 
    <TD>0 
    <TD>all elements 
    <TD>no 
    <TD>width* of containing block 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#visibility">visibility</A></SPAN> 
    <TD>visible | hidden | collapse 
    <TD>visible 
    <TD>all elements 
    <TD>yes 
    <TD>N/A 
    <TD>visual 
  <TR vAlign=baseline>
    <TD><SPAN class=property><A 
      href="http://www.w3.org/TR/css3-box/#width">width</A></SPAN>, <SPAN 
      class=property><A 
      href="http://www.w3.org/TR/css3-box/#height">height</A></SPAN> 
    <TD>&lt;length&gt; | &lt;percentage&gt; | &lt;number&gt; | auto 
    <TD>auto 
    <TD>all elements, except inline-level elements with 'display-model' of 
      'inline-inside' 
    <TD>no 
    <TD>width, resp. height of containing block, but see prose 
    <TD>visual </TR></TBODY></TABLE><!--end properties-->
<P>The following properties are defined in other modules: 
<UL>
  <LI><DFN id=background>'background'</DFN>, <DFN 
  id=background-position>'background-position'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3BG" rel=biblioentry>[CSS3BG]</A> 
  <LI><DFN id=border-top-width0>'border-top-width'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3BORDER" 
  rel=biblioentry>[CSS3BORDER]</A> 
  <LI><DFN id=direction>'direction'</DFN>, <DFN 
  id=dominant-baseline>'dominant-baseline'</DFN>, <DFN 
  id=line-box-contain>'line-box-contain'</DFN>, <DFN 
  id=text-indent>'text-indent'</DFN>, <DFN id=writing-mode>'writing-mode'</DFN>, 
  <DFN id=text-overflow>'text-overflow'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3TEXT" rel=biblioentry>[CSS3TEXT]</A> 
  <LI><DFN id=font-size>'font-size'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3FONT" rel=biblioentry>[CSS3FONT]</A> 
  <LI><DFN id=icon>'icon'</DFN> <A href="http://www.w3.org/TR/css3-box/#CSS3UI" 
  rel=biblioentry>[CSS3UI]</A> 
  <LI><DFN id=list-style>'list-style'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3LIST" rel=biblioentry>[CSS3LIST]</A> 
  <LI><DFN id=position>'position'</DFN>, <DFN id=clip>'clip'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3POS" rel=biblioentry>[CSS3POS]</A> 
  <LI><DFN id=quotes>'quotes'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3GENCON" 
  rel=biblioentry>[CSS3GENCON]</A> 
  <LI><DFN id=size>'size'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3PAGE" rel=biblioentry>[CSS3PAGE]</A> 
  <LI><DFN id=opacity>'opacity'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3COLOR" 
  rel=biblioentry>[CSS3COLOR]</A> 
  <LI><DFN id=line-height>'line-height'</DFN> <A 
  href="http://www.w3.org/TR/css3-box/#CSS3LINE" rel=biblioentry>[CSS3LINE]</A> 
  </LI></UL><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-declaration:"~/SGML/HTML4.decl"
sgml-default-doctype-name:"html"
sgml-minimize-attributes:t
sgml-nofill-elements:("pre" "style" "br")
sgml-live-element-indicator:t
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-always-quote-attributes:t
sgml-indent-step:nil
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
--></BODY></HTML>
