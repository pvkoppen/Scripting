@ECHO OFF
REM Name          : Backup-WhanauTahiData.cmd
REM Description   : Script used to run a WTFetch backup of out Whanau Tahi Instances. (With a /silent option for scheduled operation).
REM Author        : Peter van Koppen,  Tui Ora Limited
REM Must be run as: svc_backup (Ensure Windows Stored Credentials are acurate!)
REM Location      : C:\Admin\Scripts
REM Tools Required: DPMBackup, SendMail.cmd
REM -----------------------------------------------------------------------

REM -----------------------------------------------------------------------
REM Change Log.
REM -----------------------------------------------------------------------
REM 2015-12-17: 1.0 First published Edition
REM 2015-12-18: 2.0 imported other settings from Backup script.
REM -----------------------------------------------------------------------

REM -- Default Settings
REM -----------------------------------------------------------------------
TITLE %~n0
ECHO [INFO ] -- Backup Settings
SET strBackupType=WhanauTahi
SET strBackupTarget=F:\
SET intCopiesToKeep=7

ECHO [INFO ] Application Settings
SET strApplicationPath=C:\Admin\Tools\WTFetch\

ECHO [INFO ] Parameters: %*
IF %1' == /?' GOTO Help
IF %1' == /silent' GOTO Log
IF %1' == /Action' GOTO Action
GOTO AreYouSure

:GetDateTime
@FOR /F "tokens=1-9 delims=/ " %%A IN ('date /t') DO @FOR /F "tokens=1-9 delims=:. " %%a IN ('time /t') DO SET strDateTime=%%D%%C%%B[%%A]-%%c%%d%%a%%b&& SET strDate=%%D%%C%%B[%%A]&& SET strTime=%%c%%d%%a%%b
GOTO End

:PrintDateTime
ECHO [INFO ] -----------------------------------------------------------------------
@FOR /F "tokens=1-9 delims=/ " %%A IN ('date /t') DO @FOR /F "tokens=1-9 delims=:. " %%a IN ('time /t') DO ECHO [INFO ] -- DATE-TIME=%%D%%C%%B[%%A]-%%c%%d%%a%%b 
ECHO [INFO ] -----------------------------------------------------------------------
GOTO End

:AreYouSure
ECHO.
CHOICE /C YN /M "[QUESTION] Are you sure you want to "%~n0" (on %COMPUTERNAME%)?"
IF %ERRORLEVEL% == 255 GOTO Error
IF %ERRORLEVEL% == 2 GOTO End
IF %ERRORLEVEL% == 1 GOTO Action
IF %ERRORLEVEL% == 0 GOTO Error
GOTO End

:Documentation
GOTO End
------------------------------
WTFetch Usage
Version 3.4.66 (14Apr15)

Connection and Setup Options
-c filename
	Specifies the xml config file (default=config.xml)
-n orgkey
	Specifies the organisation key. Orgkey is an integer value defined in the config file. If orgkey is provided, orgname is not required.
-o orgname
	Specifies the organisation name. Orgname is a string defined in the config file. If orgname is provided, orgkey is not required.
-e entitylist
	Specifies a comma separated list of entity logical names to be exported or imported. If provided, the value here will over-ride the entity list specified in the config file.
-v 
	Provide verbose diagnostic output

Operations
-g
	Generates a DDL script for the entity list (provided either by the config file or the –e option)
-f
	Export data to files. The output file names will be the logical entity names with a “.csv” extension, or as specified in the config file. If the –e option is used, you cannot override the default file name that will be used for export.
-i
	Import data from files. The input file names used will be the logical entity names with a “.csv” extension, or as specified in the config file. If the –e option is used, you cannot override the default file name that will be used for export.

SQL Operations
-x
	Remove org data. All data for the organisation (specified with –n or –o) will be deleted from the target SQL database.
-d
	Drop tables. All tables for the entity list will be dropped from the target SQL database.
-r
	Execute DDL. The DDL script will be generated and executed on the target SQL database.
-t
	Truncate tables. All tables for the entity list will be truncated in the target SQL database. Faster than –d.
-h
	Transfer to SQL. Data is export from CRM and loaded into the target SQL database. Tables must already exist and should have been previously created with the –r option or by running the script generated by the –g option.

Operation Options
-u
	Output dates in UTC round-trip format. Changes the format for dates to UTC round trip. Useful if transferring data between systems with different time zones.
-a
	Export active records only. Inactive records will be ignored if this option is specified.
-l
	Assume valid guids. Assumes that all guid lookup references are valid on import. Can increase loading speed, but imports will fail if lookup guids cannot be found. It is generally safer to avoid use of this option.

Examples
	Generates DDL, Drops existing tables, rebuilds new tables, transfers data, uses org #1 by default
		Wtfetch -g -d -r –h
	Exports Data from an organisation to SQL
		Wtfetch –n1 -h
	Exports Data from an organisation to csv files
		Wtfetch –n1 –v –f
	Imports data to an organisation from csv files
		Wtfetch –n1 –v –i

Requirements
	The host running wtfetch must have Windows Identity Foundation installed.
	Authentication credentials for CRM connections are stored in the Windows Credentials Store. For each  CRM organisation, you need to create a generic windows credential with the name:
		WhanauTahi_Navigator:Fetch:URL (eg WhanauTahi_Navigator:Fetch:https://tuiora.crm6.dynamics.com.)
		Where URL is the URL of the crm organization, e.g. https://myorg.crm6.dynamics.com.
		The username and password provided should have the necessary security role assigned to read and if necessary update records.

Sample config.xml File
<?xml version="1.0" encoding="utf-8" ?>
<WtFetch>
  <DataWarehouse ConnectionString="Persist Security Info=false;Server=WTL-SQL-PARA;Initial Catalog=WTN_DW;Integrated Security=true;" />
  <Connection orgname="MyOrg" url="https://myorg.crm6.dynamics.com" orgkey="1" />
  <Connection orgname="WTEnglish" url="https://wtenglish.whanautahi.com" orgkey="2" />
  <EntityExtractList>
    <Entity name="mag_domain_analysiscode" />
    <Entity name="mag_tribe" filename="mag_tribe-iwi" filter='&lt;condition attribute="mag_parenttribeid" operator="null" /&gt;&lt;condition attribute="statecode" operator="eq" value="0" /&gt;'/>
    <Entity name="mag_tribe" filename="mag_tribe-hapu" filter='&lt;condition attribute="mag_parenttribeidname" operator="like" value="%%" /&gt;&lt;condition attribute="statecode" operator="eq" value="0" /&gt;'/>
    <Entity name="mag_ethnicity" />
    <Entity name="mag_gatheringplace" />
    <Entity name="mag_agegroup" />
    <Entity name="mag_employmentstatus" />
    <Entity name="mag_externalcontacttype" />
    <Entity name="mag_levelofeducation" />
    <Entity name="mag_organisationtype" />
    <Entity name="mag_reasonforreferral" />
    <Entity name="mag_referralcode" />
    <Entity name="account" />
    <Entity name="contact" />
    <Entity name="lead" />
    <Entity name="systemuser" />
    <Entity name="mag_familygroup" />
    <Entity name="mag_mag_familygroup_contact" />
    <Entity name="mag_referral" />
    <Entity name="mag_plan" />
    <Entity name="mag_outcome" />
    <Entity name="mag_outcomestep" />
    <Entity name="mag_outcome_analysiscode" />
    <Entity name="mag_outcomestep_analysiscode" />
    <Entity name="mag_domain_analysiscode" />
    <Entity name="mag_domain" />
    <Entity name="mag_analysiscode" />
    <Entity name="mag_tmocontact" />
    <Entity name="mag_asm_whakaahua" />
    <Entity name="activitypointer" />
    <Entity name="appointment" />
    <Entity name="fax" />
    <Entity name="letter" />
    <Entity name="phonecall" />
    <Entity name="annotation" />
    <Entity name="mag_note" />
    <Entity name="mag_fundingcontract" />
    <Entity name="mag_contractservice" />
    <Entity name="mag_contractservicetype" />
    <Entity name="mag_contracttype" />
    <Entity name="mag_activitycode" />
  </EntityExtractList>
</WtFetch>
------------------------------
GOTO End

:Help
GOTO End

:Log
ECHO [INFO ] Start Logging
IF NOT EXIST "%~dp0..\LogFiles\." MKDIR "%~dp0..\LogFiles"
MOVE /Y "%~dp0..\LogFiles\%~n0.Log" "%~dp0..\LogFiles\%~n0.Old.Log"
CALL %0 /Action %2 >> "%~dp0..\LogFiles\%~n0.Log" 2>>&1
TYPE "%~dp0..\LogFiles\%~n0.Log" >> "%~dp0..\LogFiles\%~n0.History.Log"
GOTO End

:Action
ECHO.
ECHO [INFO ] ---------------- Start: %~dpnx0 on %ComputerName% ----------------
CALL :PrintDateTime
CALL :GetDateTime
REM IF NOT %ERRORLEVEL%' == 0' SET strSendEmail=True

GOTO PreBackup

:PreBackup
ECHO [INFO ] Pre-Backup
GOTO MainBackup

:MainBackup
CALL :DoBackup tuiora
CALL :DoBackup tuiorasandbox
CALL :DoBackup tuioratest
GOTO PostBackup

:PostBackup
ECHO [INFO ] Post-Backup
GOTO DoEnd

:DoBackup
ECHO [INFO ] -- Processing WT Instance: '%1'.
ECHO [INFO ] Cleanup-BackupTarget - Starting
IF NOT EXIST "%strBackupTarget%%strBackupType%\%1\." MKDIR "%strBackupTarget%%strBackupType%\%1\"
DIR /B /O-N "%strBackupTarget%%strBackupType%\%1\" > %~dp0..\LogFiles\%~n0-Previous.txt
MORE +%intCopiesToKeep% %~dp0..\LogFiles\%~n0-Previous.txt > %~dp0..\LogFiles\%~n0-Cleanup.txt
TYPE %~dp0..\LogFiles\%~n0-Cleanup.txt
FOR /F %%A IN (%~dp0..\LogFiles\%~n0-Cleanup.txt) DO ECHO RMDIR /S /Q "%strBackupTarget%%strBackupType%\%1\%%A"
ECHO [INFO ] Cleanup-BackupTarget - Finished
ECHO [INFO ] Create Backup Instance folder
IF NOT EXIST "%strBackupTarget%%strBackupType%\%1\%strDateTime%\." MKDIR "%strBackupTarget%%strBackupType%\%1\%strDateTime%\"
ECHO [INFO ] Change Drive Letter
FOR /F "delims=|" %%A IN ("%strBackupTarget%") DO %%~dA
ECHO [INFO ] Change Folder
CD "%strBackupTarget%%strBackupType%\%1\%strDateTime%\."
ECHO [INFO ] Copy Config
COPY "%~dpn0-%1.xml" "config.xml"
ECHO [INFO ] Start WTFetch
%strApplicationPath%WTFetch.exe -n1 -f -v
IF NOT %ERRORLEVEL%' == 0' SET strSendEmail=True
IF NOT %strSendEmail%' == True' ECHO [INFO ] Backup Completed without Errors.
IF %strSendEmail%' == True' ECHO [INFO ] WTFetch Completed.
CD ..
REM RMDIR ".\%strDateTime%\."
GOTO End

:DoEnd
ECHO [INFO ] Email the logbook to IT Services.
IF %strSendEmail%' == True' CALL "%~dp0..\Tools\SendMail.cmd" "%~n0 (%COMPUTERNAME%) - Completed with Errors" "%~dp0..\LogFiles\%~n0.Log"
IF NOT %strSendEmail%' == True' CALL "%~dp0..\Tools\SendMail.cmd" "%~n0 (%COMPUTERNAME%) - Completed Succesfully" "%~dp0..\LogFiles\%~n0.Log"
ECHO [INFO ] ---------------- End  : %~dpnx0 on %ComputerName% ----------------
CALL :PrintDateTime
GOTO End

:Error
ECHO [ERROR] Error detected! [%ERRORLEVEL%]
ECHO [ERROR] Full Internal Server DNS name = %COMPUTERNAME%.%USERDNSDOMAIN%
GOTO End

:End
REM -----------------------------------------------------------------------

